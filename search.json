[{"path":"https://easystats.github.io/circus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dominique Makowski. Author, maintainer. Daniel Lüdecke. Author.","code":""},{"path":"https://easystats.github.io/circus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Makowski D, Lüdecke D (2025). circus: Circus Monsters. R package version 0.1.4.","code":"@Manual{,   title = {circus: The Circus of Monsters},   author = {Dominique Makowski and Daniel Lüdecke},   year = {2025},   note = {R package version 0.1.4}, }"},{"path":"https://easystats.github.io/circus/index.html","id":"circus","dir":"","previous_headings":"","what":"The Circus of Monsters","title":"The Circus of Monsters","text":"Circus Monsters! circus contains variety fitted models help systematic testing packages.","code":""},{"path":"https://easystats.github.io/circus/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"The Circus of Monsters","text":"Run following:","code":"install.packages(\"remotes\") remotes::install_github(\"easystats/circus\") library(\"circus\")"},{"path":"https://easystats.github.io/circus/index.html","id":"how-to-use-it","dir":"","previous_headings":"","what":"How to use it","title":"The Circus of Monsters","text":"can use package testthat block directly calling models. However, work travis, easier directly download github download_model insight package:","code":"test_that(\"my_function_works\", {   testthat::skip_if_not_installed(\"insight\")   testthat::skip_if_not_installed(\"curl\") # to check internet access   testthat::skip_if_offline()   testthat::skip_if_not_installed(\"httr2\") # to download stuff    # model <- circus::lmerMod_1  # Local solution   model <- insight::download_model(\"lmerMod_1\")   testthat::skip_if(is.null(model))   testthat::expect_equal(myFunction(model), 0.333) })"},{"path":"https://easystats.github.io/circus/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"The Circus of Monsters","text":"Feel free add model find missing! scary creature depth mind place ! order add models, following: Add model-name usethis::use_data() function (last chunk) README.Rmd Add documentation model R/data.R/ file Now fit model save data-folder, using usethis::use_data(<yourmodel>). Check build documentation package (generate .rd-files) Upload following files github: /data/<yourmodel.rda>, data.R data.rd. Note build install package, recommended following build-options: R CMD INSTALL ---multiarch ---keep.source ---libs ---data. Furthermore, building documentation, make sure build vignettes.","code":""},{"path":[]},{"path":"https://easystats.github.io/circus/index.html","id":"illusion-game","dir":"","previous_headings":"Sample data","what":"Illusion Game","title":"The Circus of Monsters","text":"","code":"# Data from Makowski et al., (2023) for the Illusion Game df <- read.csv(\"https://raw.githubusercontent.com/RealityBending/IllusionGameValidation/refs/heads/main/data/study1.csv\") df <- df[c(\"Participant\", \"Illusion_Type\", \"Trial\", \"RT\", \"Error\", \"Illusion_Strength\", \"Illusion_Difference\")] df$RT <- df$RT / 1000 df <- df[df$Illusion_Strength > 0, ] df <- df[df$Illusion_Type %in% c(\"Müller-Lyer\", \"Delboeuf\", \"Ebbinghaus\", \"Vertical-Horizontal\", \"Ponzo\"), ] write.csv(df, \"../data/illusiongame.csv\", row.names = FALSE)"},{"path":"https://easystats.github.io/circus/index.html","id":"how-to-add-models","dir":"","previous_headings":"","what":"How to add models","title":"The Circus of Monsters","text":"","code":"lm_1 <- lm(mpg ~ wt, data = mtcars) usethis::use_data(lm_1, overwrite = TRUE)"},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_1.html","id":null,"dir":"Reference","previous_headings":"","what":"GLMMadaptive_1 — GLMMadaptive_1","title":"GLMMadaptive_1 — GLMMadaptive_1","text":"Model class GLMMadaptive","code":""},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLMMadaptive_1 — GLMMadaptive_1","text":"","code":"GLMMadaptive_1"},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GLMMadaptive_1 — GLMMadaptive_1","text":"object class MixMod length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLMMadaptive_1 — GLMMadaptive_1","text":"","code":"if (FALSE) { # \\dontrun{ data(cbpp, package = \"lme4\")  GLMMadaptive::mixed_model(   cbind(incidence, size - incidence) ~ period,   random = ~ 1 | herd,   data = cbpp,   family = binomial ) # } }"},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_1.html","id":null,"dir":"Reference","previous_headings":"","what":"GLMMadaptive_zi_1 — GLMMadaptive_zi_1","title":"GLMMadaptive_zi_1 — GLMMadaptive_zi_1","text":"Model class GLMMadaptive","code":""},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLMMadaptive_zi_1 — GLMMadaptive_zi_1","text":"","code":"GLMMadaptive_zi_1"},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GLMMadaptive_zi_1 — GLMMadaptive_zi_1","text":"object class MixMod length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLMMadaptive_zi_1 — GLMMadaptive_zi_1","text":"","code":"if (FALSE) { # \\dontrun{ # data prepararion: see \"glmmTMB_1\"  GLMMadaptive::mixed_model(   count ~ child + camper,   random = ~ 1 | persons,   zi_fixed = ~ child + livebait,   data = fish,   family = GLMMadaptive::zi.poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_2.html","id":null,"dir":"Reference","previous_headings":"","what":"GLMMadaptive_zi_2 — GLMMadaptive_zi_2","title":"GLMMadaptive_zi_2 — GLMMadaptive_zi_2","text":"Model class GLMMadaptive","code":""},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GLMMadaptive_zi_2 — GLMMadaptive_zi_2","text":"","code":"GLMMadaptive_zi_2"},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"GLMMadaptive_zi_2 — GLMMadaptive_zi_2","text":"object class MixMod length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/GLMMadaptive_zi_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GLMMadaptive_zi_2 — GLMMadaptive_zi_2","text":"","code":"if (FALSE) { # \\dontrun{ # data prepararion: see \"glmmTMB_1\"  GLMMadaptive::mixed_model(   count ~ child + camper,   random = ~ 1 | persons,   zi_fixed = ~ child + livebait,   zi_random = ~ 1 | persons,   data = fish,   family = GLMMadaptive::zi.poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/anova_1.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_1 — anova_1","title":"anova_1 — anova_1","text":"Model class anova","code":""},{"path":"https://easystats.github.io/circus/reference/anova_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_1 — anova_1","text":"","code":"anova_1"},{"path":"https://easystats.github.io/circus/reference/anova_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_1 — anova_1","text":"object class anova (inherits data.frame) 2 rows 5 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_1 — anova_1","text":"","code":"if (FALSE) { anova(lm(Sepal.Width ~ Species, data = iris)) }"},{"path":"https://easystats.github.io/circus/reference/anova_2.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_2 — anova_2","title":"anova_2 — anova_2","text":"Model class anova","code":""},{"path":"https://easystats.github.io/circus/reference/anova_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_2 — anova_2","text":"","code":"anova_2"},{"path":"https://easystats.github.io/circus/reference/anova_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_2 — anova_2","text":"object class anova (inherits data.frame) 8 rows 5 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_2 — anova_2","text":"","code":"if (FALSE) { data <- iris data$Cat1 <- rep(c(\"X\", \"X\", \"Y\"), length.out = nrow(data)) data$Cat2 <- rep(c(\"A\", \"B\"), length.out = nrow(data))  anova(lm(Sepal.Length ~ Species * Cat1 * Cat2, data = data)) }"},{"path":"https://easystats.github.io/circus/reference/anova_3.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_3 — anova_3","title":"anova_3 — anova_3","text":"Model class anova","code":""},{"path":"https://easystats.github.io/circus/reference/anova_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_3 — anova_3","text":"","code":"anova_3"},{"path":"https://easystats.github.io/circus/reference/anova_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_3 — anova_3","text":"object class anova (inherits data.frame) 6 rows 5 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_4.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_4 — anova_4","title":"anova_4 — anova_4","text":"Model class anova","code":""},{"path":"https://easystats.github.io/circus/reference/anova_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_4 — anova_4","text":"","code":"anova_4"},{"path":"https://easystats.github.io/circus/reference/anova_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_4 — anova_4","text":"object class anova (inherits data.frame) 3 rows 6 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_0.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_lmerMod_0 — anova_lmerMod_0","title":"anova_lmerMod_0 — anova_lmerMod_0","text":"Model class anova merMod","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_lmerMod_0 — anova_lmerMod_0","text":"","code":"anova_lmerMod_0"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_lmerMod_0 — anova_lmerMod_0","text":"object class anova (inherits data.frame) 0 rows 4 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_lmerMod_0 — anova_lmerMod_0","text":"","code":"if (FALSE) { anova(lmer(wt ~ 1 + (1 | gear), data = mtcars)) }"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_1.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_lmerMod_1 — anova_lmerMod_1","title":"anova_lmerMod_1 — anova_lmerMod_1","text":"Model class anova merMod","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_lmerMod_1 — anova_lmerMod_1","text":"","code":"anova_lmerMod_1"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_lmerMod_1 — anova_lmerMod_1","text":"object class anova (inherits data.frame) 1 rows 4 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_lmerMod_1 — anova_lmerMod_1","text":"","code":"if (FALSE) { anova(lmer(wt ~ cyl + (1 | gear), data = mtcars)) }"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_2.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_lmerMod_2 — anova_lmerMod_2","title":"anova_lmerMod_2 — anova_lmerMod_2","text":"Model class anova merMod","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_lmerMod_2 — anova_lmerMod_2","text":"","code":"anova_lmerMod_2"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_lmerMod_2 — anova_lmerMod_2","text":"object class anova (inherits data.frame) 2 rows 4 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_lmerMod_2 — anova_lmerMod_2","text":"","code":"if (FALSE) { anova(lmer(wt ~ drat + cyl + (1 | gear), data = mtcars)) }"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_3.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_lmerMod_3 — anova_lmerMod_3","title":"anova_lmerMod_3 — anova_lmerMod_3","text":"Model class anova merMod","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_lmerMod_3 — anova_lmerMod_3","text":"","code":"anova_lmerMod_3"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_lmerMod_3 — anova_lmerMod_3","text":"object class anova (inherits data.frame) 3 rows 4 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_lmerMod_3 — anova_lmerMod_3","text":"","code":"if (FALSE) { anova(lmer(wt ~ drat * cyl + (1 | gear), data = mtcars)) }"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_4.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_lmerMod_4 — anova_lmerMod_4","title":"anova_lmerMod_4 — anova_lmerMod_4","text":"Model class anova merMod","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_lmerMod_4 — anova_lmerMod_4","text":"","code":"anova_lmerMod_4"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_lmerMod_4 — anova_lmerMod_4","text":"object class anova (inherits data.frame) 2 rows 4 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_lmerMod_4 — anova_lmerMod_4","text":"","code":"if (FALSE) { anova(lmer(wt ~ drat/cyl + (1 | gear), data = mtcars)) }"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_5.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_lmerMod_5 — anova_lmerMod_5","title":"anova_lmerMod_5 — anova_lmerMod_5","text":"Model class anova merMod","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_lmerMod_5 — anova_lmerMod_5","text":"","code":"anova_lmerMod_5"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_lmerMod_5 — anova_lmerMod_5","text":"object class anova (inherits data.frame) 1 rows 4 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_lmerMod_5 — anova_lmerMod_5","text":"","code":"if (FALSE) { anova(lmerMod_5) }"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_6.html","id":null,"dir":"Reference","previous_headings":"","what":"anova_lmerMod_6 — anova_lmerMod_6","title":"anova_lmerMod_6 — anova_lmerMod_6","text":"Model class anova merMod","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anova_lmerMod_6 — anova_lmerMod_6","text":"","code":"anova_lmerMod_6"},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"anova_lmerMod_6 — anova_lmerMod_6","text":"object class anova (inherits data.frame) 3 rows 8 columns.","code":""},{"path":"https://easystats.github.io/circus/reference/anova_lmerMod_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anova_lmerMod_6 — anova_lmerMod_6","text":"","code":"if (FALSE) { anova(lmerMod_0, lmerMod_1, lmerMod_2) }"},{"path":"https://easystats.github.io/circus/reference/aov_1.html","id":null,"dir":"Reference","previous_headings":"","what":"aov_1 — aov_1","title":"aov_1 — aov_1","text":"Model class aov","code":""},{"path":"https://easystats.github.io/circus/reference/aov_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aov_1 — aov_1","text":"","code":"aov_1"},{"path":"https://easystats.github.io/circus/reference/aov_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aov_1 — aov_1","text":"object class aov (inherits lm) length 13.","code":""},{"path":"https://easystats.github.io/circus/reference/aov_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aov_1 — aov_1","text":"","code":"if (FALSE) { aov(Sepal.Width ~ Species, data = iris) }"},{"path":"https://easystats.github.io/circus/reference/aov_2.html","id":null,"dir":"Reference","previous_headings":"","what":"aov_2 — aov_2","title":"aov_2 — aov_2","text":"Model class aov","code":""},{"path":"https://easystats.github.io/circus/reference/aov_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aov_2 — aov_2","text":"","code":"aov_2"},{"path":"https://easystats.github.io/circus/reference/aov_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aov_2 — aov_2","text":"object class aov (inherits lm) length 13.","code":""},{"path":"https://easystats.github.io/circus/reference/aov_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aov_2 — aov_2","text":"","code":"if (FALSE) { data <- iris data$Cat1 <- rep(c(\"X\", \"X\", \"Y\"), length.out = nrow(data)) data$Cat2 <- rep(c(\"A\", \"B\"), length.out = nrow(data))  aov(Sepal.Length ~ Species * Cat1 * Cat2, data = data) }"},{"path":"https://easystats.github.io/circus/reference/aov_3.html","id":null,"dir":"Reference","previous_headings":"","what":"aov_3 — aov_3","title":"aov_3 — aov_3","text":"Model class aov","code":""},{"path":"https://easystats.github.io/circus/reference/aov_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aov_3 — aov_3","text":"","code":"aov_3"},{"path":"https://easystats.github.io/circus/reference/aov_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aov_3 — aov_3","text":"object class aov (inherits lm) length 13.","code":""},{"path":"https://easystats.github.io/circus/reference/aovlist_1.html","id":null,"dir":"Reference","previous_headings":"","what":"aovlist_1 — aovlist_1","title":"aovlist_1 — aovlist_1","text":"Model class aovlist","code":""},{"path":"https://easystats.github.io/circus/reference/aovlist_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aovlist_1 — aovlist_1","text":"","code":"aovlist_1"},{"path":"https://easystats.github.io/circus/reference/aovlist_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aovlist_1 — aovlist_1","text":"object class aovlist (inherits listof) length 3.","code":""},{"path":"https://easystats.github.io/circus/reference/aovlist_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aovlist_1 — aovlist_1","text":"","code":"if (FALSE) { aov(wt ~ cyl + Error(gear), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/aovlist_2.html","id":null,"dir":"Reference","previous_headings":"","what":"aovlist_2 — aovlist_2","title":"aovlist_2 — aovlist_2","text":"Model class aovlist","code":""},{"path":"https://easystats.github.io/circus/reference/aovlist_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aovlist_2 — aovlist_2","text":"","code":"aovlist_2"},{"path":"https://easystats.github.io/circus/reference/aovlist_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aovlist_2 — aovlist_2","text":"object class aovlist (inherits listof) length 3.","code":""},{"path":"https://easystats.github.io/circus/reference/aovlist_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"aovlist_2 — aovlist_2","text":"","code":"if (FALSE) { data <- iris data$Cat1 <- rep(c(\"X\", \"X\", \"Y\"), length.out = nrow(data)) data$Cat2 <- rep(c(\"A\", \"B\"), length.out = nrow(data))  aov(Sepal.Length ~ Species * Cat1 + Error(Cat2), data = data) }"},{"path":"https://easystats.github.io/circus/reference/aovlist_3.html","id":null,"dir":"Reference","previous_headings":"","what":"aovlist_3 — aovlist_3","title":"aovlist_3 — aovlist_3","text":"Model class aovlist","code":""},{"path":"https://easystats.github.io/circus/reference/aovlist_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"aovlist_3 — aovlist_3","text":"","code":"aovlist_3"},{"path":"https://easystats.github.io/circus/reference/aovlist_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"aovlist_3 — aovlist_3","text":"object class aovlist (inherits listof) length 3.","code":""},{"path":"https://easystats.github.io/circus/reference/betareg_1.html","id":null,"dir":"Reference","previous_headings":"","what":"betareg_1 — betareg_1","title":"betareg_1 — betareg_1","text":"Model class betareg","code":""},{"path":"https://easystats.github.io/circus/reference/betareg_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"betareg_1 — betareg_1","text":"","code":"betareg_1"},{"path":"https://easystats.github.io/circus/reference/betareg_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"betareg_1 — betareg_1","text":"object class betareg length 29.","code":""},{"path":"https://easystats.github.io/circus/reference/betareg_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"betareg_1 — betareg_1","text":"","code":"if (FALSE) { betareg(yield ~ batch + temp, data = GasolineYield) }"},{"path":"https://easystats.github.io/circus/reference/betareg_2.html","id":null,"dir":"Reference","previous_headings":"","what":"betareg_2 — betareg_2","title":"betareg_2 — betareg_2","text":"Model class betareg","code":""},{"path":"https://easystats.github.io/circus/reference/betareg_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"betareg_2 — betareg_2","text":"","code":"betareg_2"},{"path":"https://easystats.github.io/circus/reference/betareg_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"betareg_2 — betareg_2","text":"object class betareg length 29.","code":""},{"path":"https://easystats.github.io/circus/reference/betareg_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"betareg_2 — betareg_2","text":"","code":"if (FALSE) { betareg(I(food/income) ~ income + persons, data = FoodExpenditure) }"},{"path":"https://easystats.github.io/circus/reference/brms_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_1 — brms_1","title":"brms_1 — brms_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_1 — brms_1","text":"","code":"brms_1"},{"path":"https://easystats.github.io/circus/reference/brms_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_1 — brms_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_1 — brms_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(333) brms::brm(mpg ~ wt + cyl, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_2 — brms_2","title":"brms_2 — brms_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_2 — brms_2","text":"","code":"brms_2"},{"path":"https://easystats.github.io/circus/reference/brms_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_2 — brms_2","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_2 — brms_2","text":"","code":"if (FALSE) { # \\dontrun{ dat <- read.table(header = TRUE, text = \"   n r r/n group treat c2 c1 w   62 3 0.048387097 1 0 0.1438 1.941115288 1.941115288   96 1 0.010416667 1 0 0.237 1.186583128 1.186583128   17 0 0 0 0 0.2774 1.159882668 3.159882668   41 2 0.048780488 1 0 0.2774 1.159882668 3.159882668   212 170 0.801886792 0 0 0.2093 1.133397521 1.133397521   143 21 0.146853147 1 1 0.1206 1.128993008 1.128993008   143 0 0 1 1 0.1707 1.128993008 2.128993008   143 33 0.230769231 0 1 0.0699 1.128993008 1.128993008   73 62 1.260273973 0 1 0.1351 1.121927228 1.121927228   73 17 0.232876712 0 1 0.1206 1.121927228 1.121927228\") dat$treat <- as.factor(dat$treat)  brms::brm(   r | trials(n) ~ treat * c2,   data = dat,   family = binomial(link = logit),   chains = 1, iter = 500 )# } }"},{"path":"https://easystats.github.io/circus/reference/brms_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_3 — brms_3","title":"brms_3 — brms_3","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_3 — brms_3","text":"","code":"brms_3"},{"path":"https://easystats.github.io/circus/reference/brms_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_3 — brms_3","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_3 — brms_3","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) x <- sample(c(1:3), 1000, replace = TRUE) w <- runif(1000, min = 0.3, max = 3) y <- rnorm(1000, mean = 0, sd = 1) data <- data.frame(x, w, y) data$x <- factor(data$x)  brm(x | weights(w) ~ y, data = data, family = categorical)# } }"},{"path":"https://easystats.github.io/circus/reference/brms_4.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_4 — brms_4","title":"brms_4 — brms_4","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_4 — brms_4","text":"","code":"brms_4"},{"path":"https://easystats.github.io/circus/reference/brms_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_4 — brms_4","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_4 — brms_4","text":"","code":"if (FALSE) { # \\dontrun{ brm(   Sepal.Length ~ Sepal.Width * Species,   data = iris,   family = gaussian(),   chains = 2, iter = 2000, warmup = 1000, cores = 2 )# } }"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_4bf_1 — brms_4bf_1","title":"brms_4bf_1 — brms_4bf_1","text":"Example class brmsfit save_all_pars = TRUE.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_4bf_1 — brms_4bf_1","text":"","code":"brms_4bf_1"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_4bf_1 — brms_4bf_1","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_4bf_1 — brms_4bf_1","text":"","code":"if (FALSE) { # \\dontrun{ brm(Sepal.Length ~ 1, data = iris, save_all_pars = TRUE) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_4bf_2 — brms_4bf_2","title":"brms_4bf_2 — brms_4bf_2","text":"Example class brmsfit save_all_pars = TRUE.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_4bf_2 — brms_4bf_2","text":"","code":"brms_4bf_2"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_4bf_2 — brms_4bf_2","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_4bf_2 — brms_4bf_2","text":"","code":"if (FALSE) { # \\dontrun{ brm(Sepal.Length ~ Species, data = iris, save_all_pars = TRUE) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_4bf_3 — brms_4bf_3","title":"brms_4bf_3 — brms_4bf_3","text":"Example class brmsfit save_all_pars = TRUE.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_4bf_3 — brms_4bf_3","text":"","code":"brms_4bf_3"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_4bf_3 — brms_4bf_3","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_4bf_3 — brms_4bf_3","text":"","code":"if (FALSE) { # \\dontrun{ brm(Sepal.Length ~ Petal.Length, data = iris, save_all_pars = TRUE) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_4.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_4bf_4 — brms_4bf_4","title":"brms_4bf_4 — brms_4bf_4","text":"Example class brmsfit save_all_pars = TRUE.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_4bf_4 — brms_4bf_4","text":"","code":"brms_4bf_4"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_4bf_4 — brms_4bf_4","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_4bf_4 — brms_4bf_4","text":"","code":"if (FALSE) { # \\dontrun{ brm(Sepal.Length ~ Species + Petal.Length, data = iris, save_all_pars = TRUE) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_5.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_4bf_5 — brms_4bf_5","title":"brms_4bf_5 — brms_4bf_5","text":"Example class brmsfit save_all_pars = TRUE.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_4bf_5 — brms_4bf_5","text":"","code":"brms_4bf_5"},{"path":"https://easystats.github.io/circus/reference/brms_4bf_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_4bf_5 — brms_4bf_5","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_4bf_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_4bf_5 — brms_4bf_5","text":"","code":"if (FALSE) { # \\dontrun{ brm(Sepal.Length ~ Species * Petal.Length, data = iris, save_all_pars = TRUE) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_aterm_1 — brms_aterm_1","title":"brms_aterm_1 — brms_aterm_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_aterm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_aterm_1 — brms_aterm_1","text":"","code":"brms_aterm_1"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_aterm_1 — brms_aterm_1","text":"object class brmsfit length 22.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_aterm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_aterm_1 — brms_aterm_1","text":"","code":"if (FALSE) { # \\dontrun{ brm(am | trials(1) ~ hp,   data = mtcars, family = binomial(),   chains = 2, iter = 200,   backend = \"cmdstanr\", cores = 2 )# } }"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_aterm_2 — brms_aterm_2","title":"brms_aterm_2 — brms_aterm_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_aterm_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_aterm_2 — brms_aterm_2","text":"","code":"brms_aterm_2"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_aterm_2 — brms_aterm_2","text":"object class brmsfit length 22.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_aterm_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_aterm_2 — brms_aterm_2","text":"","code":"if (FALSE) { # \\dontrun{ brm(am | trials(cyl) ~ hp,   data = mtcars, family = binomial(),   chains = 2, iter = 200,   backend = \"cmdstanr\", cores = 2 )# } }"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_aterm_3 — brms_aterm_3","title":"brms_aterm_3 — brms_aterm_3","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_aterm_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_aterm_3 — brms_aterm_3","text":"","code":"brms_aterm_3"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_aterm_3 — brms_aterm_3","text":"object class brmsfit length 22.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_aterm_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_aterm_3 — brms_aterm_3","text":"","code":"if (FALSE) { # \\dontrun{ data(kidney) brm(time | cens(censored) ~ age * sex + disease + (1|patient),     data = kidney, family = lognormal(),     chains = 2, iter = 200,     backend = \"cmdstanr\", cores = 2)# } }"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_4.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_aterm_4 — brms_aterm_4","title":"brms_aterm_4 — brms_aterm_4","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_aterm_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_aterm_4 — brms_aterm_4","text":"","code":"brms_aterm_4"},{"path":"https://easystats.github.io/circus/reference/brms_aterm_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_aterm_4 — brms_aterm_4","text":"object class brmsfit length 22.","code":""},{"path":[]},{"path":"https://easystats.github.io/circus/reference/brms_bernoulli_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_bernoulli_1 — brms_bernoulli_1","title":"brms_bernoulli_1 — brms_bernoulli_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_bernoulli_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_bernoulli_1 — brms_bernoulli_1","text":"","code":"brms_bernoulli_1"},{"path":"https://easystats.github.io/circus/reference/brms_bernoulli_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_bernoulli_1 — brms_bernoulli_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_bernoulli_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_bernoulli_1 — brms_bernoulli_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(1234) dat <- data.frame(   outcome = rbinom(n = 100, size = 1, prob = 0.35),   var_binom = as.factor(rbinom(n = 100, size = 1, prob = 0.3)),   var_cont = rnorm(n = 100, mean = 10, sd = 7),   groups = sample(letters[1:2], size = 100, replace = TRUE) ) set.seed(1234) brm(outcome ~ var_binom * groups + var_cont, data = dat, family = bernoulli()) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_beta_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_beta_1 — brms_beta_1","title":"brms_beta_1 — brms_beta_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_beta_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_beta_1 — brms_beta_1","text":"","code":"brms_beta_1"},{"path":"https://easystats.github.io/circus/reference/brms_beta_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_beta_1 — brms_beta_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_beta_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_beta_1 — brms_beta_1","text":"","code":"if (FALSE) { # \\dontrun{ data(FoodExpenditure, package = \"betareg\") m <- brm(   I(food / income) ~ income + (1 | persons),   data = FoodExpenditure,   family = Beta() ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_bf_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_bf_1 — brms_bf_1","title":"brms_bf_1 — brms_bf_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_bf_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_bf_1 — brms_bf_1","text":"","code":"brms_bf_1"},{"path":"https://easystats.github.io/circus/reference/brms_bf_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_bf_1 — brms_bf_1","text":"object class brmsfit length 22.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_bf_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_bf_1 — brms_bf_1","text":"","code":"if (FALSE) { # \\dontrun{ brm(   mpg ~ wt,   data = mtcars,   prior = set_prior(\"normal(0, 1)\", class = \"b\"),   refresh = 0,   iter = 200,   chains = 2 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_fct.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_categorical_1_fct — brms_categorical_1_fct","title":"brms_categorical_1_fct — brms_categorical_1_fct","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_fct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_categorical_1_fct — brms_categorical_1_fct","text":"","code":"brms_categorical_1_fct"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_fct.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_categorical_1_fct — brms_categorical_1_fct","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_fct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_categorical_1_fct — brms_categorical_1_fct","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data(mtcars) mtcars$gear_fct <- factor(mtcars$gear) brms::brm(gear_fct ~ mpg, data = mtcars, family = categorical()) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_num.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_categorical_1_num — brms_categorical_1_num","title":"brms_categorical_1_num — brms_categorical_1_num","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_categorical_1_num — brms_categorical_1_num","text":"","code":"brms_categorical_1_num"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_num.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_categorical_1_num — brms_categorical_1_num","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_categorical_1_num — brms_categorical_1_num","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data(mtcars) brms::brm(gear ~ mpg, data = mtcars, family = categorical()) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_wt.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_categorical_1_wt — brms_categorical_1_wt","title":"brms_categorical_1_wt — brms_categorical_1_wt","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_wt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_categorical_1_wt — brms_categorical_1_wt","text":"","code":"brms_categorical_1_wt"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_wt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_categorical_1_wt — brms_categorical_1_wt","text":"object class brmsfit length 16.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_1_wt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_categorical_1_wt — brms_categorical_1_wt","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data(mtcars) brms::brm(gear | weights(wt) ~ mpg, data = mtcars, family = categorical()) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_2_num.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_categorical_2_num — brms_categorical_2_num","title":"brms_categorical_2_num — brms_categorical_2_num","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_2_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_categorical_2_num — brms_categorical_2_num","text":"","code":"brms_categorical_2_num"},{"path":"https://easystats.github.io/circus/reference/brms_categorical_2_num.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_categorical_2_num — brms_categorical_2_num","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_categorical_2_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_categorical_2_num — brms_categorical_2_num","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) brm(   Species ~ Sepal.Width,   data = iris,   family = categorical(refcat = \"setosa\"),   refresh = 0,   backend = \"cmdstanr\",   algorithm = \"pathfinder\" ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_chocomini_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_chocomini_1 — brms_chocomini_1","title":"brms_chocomini_1 — brms_chocomini_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_chocomini_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_chocomini_1 — brms_chocomini_1","text":"","code":"brms_chocomini_1"},{"path":"https://easystats.github.io/circus/reference/brms_chocomini_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_chocomini_1 — brms_chocomini_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_chocomini_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_chocomini_1 — brms_chocomini_1","text":"","code":"if (FALSE) { # \\dontrun{ # Define formula and priors f <- bf(Real ~ 0 + Intercept + (0 + Intercept|Participant),         delta ~ 0 + Intercept + (0 + Intercept|Participant),         phi ~ 0 + Intercept,         k ~ 0 + Intercept + (0 + Intercept|Participant),         family = chocomini)  # Define priors (brms::default_prior(f_mini, data=df)) priors <- c(   prior(\"normal(0, 0.3)\", class = \"b\", coef = \"Intercept\"),   prior(\"normal(0, 0.3)\", class = \"b\", coef = \"Intercept\", dpar = \"delta\"),   prior(\"normal(3, 0.5)\", class = \"b\", coef = \"Intercept\", dpar = \"phi\"),   prior(\"normal(3, 0.5)\", class = \"b\", coef = \"Intercept\", dpar = \"k\") ) |> brms::validate_prior(formula = f, data = df)  # Fit the model brms_chocomini_1 <- brm(   formula = f,   data = df,   prior = priors,   family = chocomini,   stanvars = stanvars_chocomini,   chains = 1,   iter = 500,   backend = \"cmdstanr\" ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_corr_re1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_corr_re1 — brms_corr_re1","title":"brms_corr_re1 — brms_corr_re1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_corr_re1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_corr_re1 — brms_corr_re1","text":"","code":"brms_corr_re1"},{"path":"https://easystats.github.io/circus/reference/brms_corr_re1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_corr_re1 — brms_corr_re1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_corr_re1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_corr_re1 — brms_corr_re1","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(x = factor(rep(c('A', 'B'), each = 100)),                  y = c(rnorm(100, mean = 0, sd = 1),                        rnorm(100, mean = 10, sd = 5)),                  id = factor(rep(1:100, 2)))  brm(   bf(y ~ x + (1 | i | id), sigma ~ x + (1 | i | id)),   data = df,   iter = 500,   cores = 4 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_ipw_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_ipw_1 — brms_ipw_1","title":"brms_ipw_1 — brms_ipw_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ipw_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_ipw_1 — brms_ipw_1","text":"","code":"brms_ipw_1"},{"path":"https://easystats.github.io/circus/reference/brms_ipw_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_ipw_1 — brms_ipw_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ipw_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_ipw_1 — brms_ipw_1","text":"","code":"if (FALSE) { # \\dontrun{ brms::brm(   QoL | weights(ipw) ~ treatment * time + treatment * education +     hospital + age + phq4 + (1 | ID) ,   data = datawizard::qolcancer ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_lf_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_lf_1 — brms_lf_1","title":"brms_lf_1 — brms_lf_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_lf_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_lf_1 — brms_lf_1","text":"","code":"brms_lf_1"},{"path":"https://easystats.github.io/circus/reference/brms_lf_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_lf_1 — brms_lf_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_lf_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_lf_1 — brms_lf_1","text":"","code":"if (FALSE) { # \\dontrun{ brms::brm(   bf(carb ~ gear * vs) + lf(disc ~ 0 + mo(cyl)),   data = mtcars,   family = cumulative(\"probit\") ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_linear_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_linear_1 — brms_linear_1","title":"brms_linear_1 — brms_linear_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_linear_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_linear_1 — brms_linear_1","text":"","code":"brms_linear_1"},{"path":"https://easystats.github.io/circus/reference/brms_linear_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_linear_1 — brms_linear_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_linear_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_linear_1 — brms_linear_1","text":"","code":"if (FALSE) { # \\dontrun{ data(efc, package = \"ggeffects\") efc <- datawizard::to_factor(efc, c(\"c161sex\", \"c172code\", \"e16sex\", \"e42dep\")) levels(efc$c172code) <- c(\"low\", \"mid\", \"high\") brm(barthtot ~ e16sex + c161sex + c172code * c160age + c12hour + e42dep, data = efc) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_logistic_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_logistic_1 — brms_logistic_1","title":"brms_logistic_1 — brms_logistic_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_logistic_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_logistic_1 — brms_logistic_1","text":"","code":"brms_logistic_1"},{"path":"https://easystats.github.io/circus/reference/brms_logistic_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_logistic_1 — brms_logistic_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_logistic_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_logistic_1 — brms_logistic_1","text":"","code":"if (FALSE) { # \\dontrun{ data(efc, package = \"ggeffects\") efc <- datawizard::to_factor(efc, c(\"c161sex\", \"c172code\", \"e16sex\", \"e42dep\")) levels(efc$c172code) <- c(\"low\", \"mid\", \"high\") brm(barthtot ~ e16sex + c161sex + c172code * c160age + c12hour + e42dep, data = efc) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_meta_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_meta_1 — brms_meta_1","title":"brms_meta_1 — brms_meta_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_meta_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_meta_1 — brms_meta_1","text":"","code":"brms_meta_1"},{"path":"https://easystats.github.io/circus/reference/brms_meta_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_meta_1 — brms_meta_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_meta_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_meta_1 — brms_meta_1","text":"","code":"if (FALSE) { # \\dontrun{ # Data from # https://github.com/MathiasHarrer/Doing-Meta-Analysis-in-R/blob/master/_data/Meta_Analysis_Data.RData set.seed(123) priors <- c(prior(normal(0,1), class = Intercept),             prior(cauchy(0,0.5), class = sd))  brm(TE|se(seTE) ~ 1 + (1|Author),    data = Meta_Analysis_Data,    prior = priors,    iter = 4000) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_miss_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_miss_1 — brms_miss_1","title":"brms_miss_1 — brms_miss_1","text":"brms_miss_1","code":""},{"path":"https://easystats.github.io/circus/reference/brms_miss_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_miss_1 — brms_miss_1","text":"","code":"brms_miss_1"},{"path":"https://easystats.github.io/circus/reference/brms_miss_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_miss_1 — brms_miss_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_miss_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_miss_1 — brms_miss_1","text":"","code":"if (FALSE) { # \\dontrun{ dat <- read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/carData/TitanicSurvival.csv\") dat$survived <- ifelse(dat$survived == \"yes\", 1, 0) dat$woman <- ifelse(dat$sex == \"female\", 1, 0) |> as.factor() sum(is.na(dat$age))  # <-- 263 missing values  brm(   bf(     survived ~ woman * mi(age) + passengerClass,     family = bernoulli(link = \"logit\")   ) +     bf(age | mi() ~ passengerClass + woman) +     set_rescor(FALSE),   data = dat,   backend = \"cmdstanr\",   cores = 4 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_1 — brms_mixed_1","title":"brms_mixed_1 — brms_mixed_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_1 — brms_mixed_1","text":"","code":"brms_mixed_1"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_1 — brms_mixed_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_1 — brms_mixed_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) brms::brm(mpg ~ wt + (1 | cyl) + (1 + wt | gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_10.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_10 — brms_mixed_10","title":"brms_mixed_10 — brms_mixed_10","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_10 — brms_mixed_10","text":"","code":"brms_mixed_10"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_10 — brms_mixed_10","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_10 — brms_mixed_10","text":"","code":"if (FALSE) { # \\dontrun{ data(iris) iris$Group <- as.factor(rep(c(\"G1\", \"G2\", \"G3\"), each = 50)) set.seed(123) brms::brm(   Sepal.Width ~ Petal.Width + (Petal.Width | Group),   data = iris,   refresh = 0 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_2 — brms_mixed_2","title":"brms_mixed_2 — brms_mixed_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_2 — brms_mixed_2","text":"","code":"brms_mixed_2"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_2 — brms_mixed_2","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_2 — brms_mixed_2","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) brms::brm(Reaction ~ Days + (1 + Days | Subject), data = sleepstudy) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_3 — brms_mixed_3","title":"brms_mixed_3 — brms_mixed_3","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_3 — brms_mixed_3","text":"","code":"brms_mixed_3"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_3 — brms_mixed_3","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_3 — brms_mixed_3","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) sleepstudy$grp <- sample(1:5, size = 180, replace = TRUE) sleepstudy <- sleepstudy %>%   group_by(grp) %>%   mutate(subgrp = sample(1:15, size = n(), replace = TRUE))  brms::brm(Reaction ~ Days + (1 | grp / subgrp) + (1 | Subject), data = sleepstudy) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_4.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_4 — brms_mixed_4","title":"brms_mixed_4 — brms_mixed_4","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_4 — brms_mixed_4","text":"","code":"brms_mixed_4"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_4 — brms_mixed_4","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_4 — brms_mixed_4","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(333) brms::brm(Petal.Length ~ Petal.Width + (1 | Species), data = iris) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_5.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_5 — brms_mixed_5","title":"brms_mixed_5 — brms_mixed_5","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_5 — brms_mixed_5","text":"","code":"brms_mixed_5"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_5 — brms_mixed_5","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_5 — brms_mixed_5","text":"","code":"if (FALSE) { # \\dontrun{ library(lme4) library(brms) data(sleepstudy) set.seed(123) sleepstudy$cat <- as.factor(sample(1:5, size = 180, replace = TRUE)) sleepstudy$Reaction_d <-   ifelse(sleepstudy$Reaction < median(sleepstudy$Reaction), 0, 1)  brms::brm(   Reaction_d ~ Days + cat + (1 | Subject),   data = sleepstudy,   family = bernoulli() ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_6.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_6 — brms_mixed_6","title":"brms_mixed_6 — brms_mixed_6","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_6 — brms_mixed_6","text":"","code":"brms_mixed_6"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_6 — brms_mixed_6","text":"object class brmsfit length 20.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_6 — brms_mixed_6","text":"","code":"if (FALSE) { # \\dontrun{ bprior1 <- prior(student_t(5, 0, 10), class = b) + prior(cauchy(0, 2), class = sd) brms::brm(   count ~ Age + Base * Trt + (1 | patient),   data = epilepsy,   family = poisson(),   prior = bprior1,   chains = 1,   iter = 500 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_7.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_7 — brms_mixed_7","title":"brms_mixed_7 — brms_mixed_7","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_7 — brms_mixed_7","text":"","code":"brms_mixed_7"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_7 — brms_mixed_7","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_7 — brms_mixed_7","text":"","code":"if (FALSE) { # \\dontrun{ brm(mpg ~ wt + (1 | cyl) + (1 + wt | gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_8.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_8 — brms_mixed_8","title":"brms_mixed_8 — brms_mixed_8","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_8 — brms_mixed_8","text":"","code":"brms_mixed_8"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_8.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_8 — brms_mixed_8","text":"object class brmsfit length 20.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_8 — brms_mixed_8","text":"","code":"if (FALSE) { # \\dontrun{ bprior1 <- prior(student_t(5, 0, 10), class = b) + prior(cauchy(0, 2), class = sd) brms::brm(   count ~ Age + Base * Trt + (1 + Age | patient),   data = epilepsy,   family = poisson(),   prior = bprior1,   chains = 1,   iter = 500 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_9.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mixed_9 — brms_mixed_9","title":"brms_mixed_9 — brms_mixed_9","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_9.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mixed_9 — brms_mixed_9","text":"","code":"brms_mixed_9"},{"path":"https://easystats.github.io/circus/reference/brms_mixed_9.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mixed_9 — brms_mixed_9","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mixed_9.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mixed_9 — brms_mixed_9","text":"","code":"if (FALSE) { # \\dontrun{ brms::brm(mpg ~ hp + (1 | cyl), data = mtcars, seed = 123) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mm_1 — brms_mm_1","title":"brms_mm_1 — brms_mm_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mm_1 — brms_mm_1","text":"","code":"brms_mm_1"},{"path":"https://easystats.github.io/circus/reference/brms_mm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mm_1 — brms_mm_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mm_1 — brms_mm_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) dat <- data.frame(   sid = c(1:300),   t1id = sample(200:215, 300, replace = TRUE),   t2id = sample(200:215, 300, replace = TRUE),   y = rnorm(300, mean = 85, sd = 8),   x = rnorm(300, mean = 50, sd = 10) )  brm(y ~ x + (1 | mm(t1id, t2id)), data = dat) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mm_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mm_2 — brms_mm_2","title":"brms_mm_2 — brms_mm_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mm_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mm_2 — brms_mm_2","text":"","code":"brms_mm_2"},{"path":"https://easystats.github.io/circus/reference/brms_mm_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mm_2 — brms_mm_2","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mm_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mm_2 — brms_mm_2","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) dat <- data.frame(   y = rnorm(100), x1 = rnorm(100), x2 = rnorm(100),   g1 = sample(1:10, 100, TRUE), g2 = sample(1:10, 100, TRUE) )  # multi-membership model with level specific covariate values dat$xc <- (dat$x1 + dat$x2) / 2 brm(y ~ xc + (1 + mmc(x1, x2) | mm(g1, g2)), data = dat) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mm_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mm_3 — brms_mm_3","title":"brms_mm_3 — brms_mm_3","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mm_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mm_3 — brms_mm_3","text":"","code":"brms_mm_3"},{"path":"https://easystats.github.io/circus/reference/brms_mm_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mm_3 — brms_mm_3","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mm_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mm_3 — brms_mm_3","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data(mzcars) mtcars$w <- 1 brm(   mpg ~ 1 + hp + (1 | cyl) +     (1 | carb:am:hp) +     (1 | mm(carb, am, weights = cbind(w, w), scale = FALSE)) +     (1 | mm(carb:cyl, am:cyl, weights = cbind(w, w), scale = FALSE)),   data = mtcars, family = gaussian, chains = 4,   iter = 100, control = list(adapt_delta = 0.99, max_treedepth = 15),   cores = 4, seed = 12345,   backend = \"cmdstanr\" ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mo1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mo1 — brms_mo1","title":"brms_mo1 — brms_mo1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mo1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mo1 — brms_mo1","text":"","code":"brms_mo1"},{"path":"https://easystats.github.io/circus/reference/brms_mo1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mo1 — brms_mo1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mo1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mo1 — brms_mo1","text":"","code":"if (FALSE) { # \\dontrun{ income_options <- c(\"below_20\", \"20_to_40\", \"40_to_100\", \"greater_100\") income <- factor(   sample(income_options, 100, TRUE),   levels = income_options, ordered = TRUE ) mean_ls <- c(30, 60, 70, 75) ls <- mean_ls[income] + rnorm(100, sd = 7) dat <- data.frame(income, ls) # fit a simple monotonic model brms_mo1 <- brm(ls ~ mo(income), data = dat) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mo2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mo2 — brms_mo2","title":"brms_mo2 — brms_mo2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mo2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mo2 — brms_mo2","text":"","code":"brms_mo2"},{"path":"https://easystats.github.io/circus/reference/brms_mo2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mo2 — brms_mo2","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mo2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mo2 — brms_mo2","text":"","code":"if (FALSE) { # \\dontrun{ brm(mpg ~ mo(gear), data = mtcars, refresh = 0) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mv_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mv_1 — brms_mv_1","title":"brms_mv_1 — brms_mv_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mv_1 — brms_mv_1","text":"","code":"brms_mv_1"},{"path":"https://easystats.github.io/circus/reference/brms_mv_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mv_1 — brms_mv_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mv_1 — brms_mv_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) brms::brm(cbind(cyl, gear, carb) ~ wt + hp, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mv_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mv_2 — brms_mv_2","title":"brms_mv_2 — brms_mv_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mv_2 — brms_mv_2","text":"","code":"brms_mv_2"},{"path":"https://easystats.github.io/circus/reference/brms_mv_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mv_2 — brms_mv_2","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mv_2 — brms_mv_2","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) f1 <- bf(mpg ~ wt + disp + cyl + hp + (1 |CAR| gear)) f2 <- bf(wt ~ disp + cyl + hp + (1 |CAR| gear)) brms::brm(f1 + f2 + set_rescor(FALSE), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mv_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mv_3 — brms_mv_3","title":"brms_mv_3 — brms_mv_3","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mv_3 — brms_mv_3","text":"","code":"brms_mv_3"},{"path":"https://easystats.github.io/circus/reference/brms_mv_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mv_3 — brms_mv_3","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mv_3 — brms_mv_3","text":"","code":"if (FALSE) { # \\dontrun{ data(epilepsy) set.seed(123) epilepsy$visit <- as.numeric(epilepsy$visit) epilepsy$Base2 <- sample(epilepsy$Base, nrow(epilepsy), replace = TRUE) f1 <- bf(Base ~ zAge + count + (1 |ID| patient)) f2 <- bf(Base2 ~ zAge + Trt + (1 |ID| patient)) brms::brm(f1 + f2 + set_rescor(FALSE), data = epilepsy) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mv_4.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mv_4 — brms_mv_4","title":"brms_mv_4 — brms_mv_4","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mv_4 — brms_mv_4","text":"","code":"brms_mv_4"},{"path":"https://easystats.github.io/circus/reference/brms_mv_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mv_4 — brms_mv_4","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mv_4 — brms_mv_4","text":"","code":"if (FALSE) { # \\dontrun{ f1 <- bf(Sepal.Length ~ Petal.Length + Sepal.Width + Species) f2 <- bf(Sepal.Width ~ Species) brms::brm(f1 + f2 + set_rescor(FALSE), data = iris, chains = 1, iter = 500) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mv_5.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mv_5 — brms_mv_5","title":"brms_mv_5 — brms_mv_5","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mv_5 — brms_mv_5","text":"","code":"brms_mv_5"},{"path":"https://easystats.github.io/circus/reference/brms_mv_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mv_5 — brms_mv_5","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mv_5 — brms_mv_5","text":"","code":"if (FALSE) { # \\dontrun{ bf1 <- bf(count ~ child + camper + (1 | persons), zi ~ camper + (1 | persons)) bf2 <- bf(count2 ~ child + livebait + (1 | persons), zi ~ child + (1 | persons)) brms::brm(bf1 + bf2, data = zinb, family = zero_inflated_poisson(), chains = 1, iter = 500) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_mv_6.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_mv_6 — brms_mv_6","title":"brms_mv_6 — brms_mv_6","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_mv_6 — brms_mv_6","text":"","code":"brms_mv_6"},{"path":"https://easystats.github.io/circus/reference/brms_mv_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_mv_6 — brms_mv_6","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_mv_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_mv_6 — brms_mv_6","text":"","code":"if (FALSE) { # \\dontrun{ data(jobs, package = \"mediation\") f1 <- bf(job_seek ~ treat + econ_hard + sex + age) f2 <- bf(depress2 ~ treat + job_seek + econ_hard + sex + age) brm(f1 + f2 + set_rescor(FALSE), data = jobs) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_null_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_null_1 — brms_null_1","title":"brms_null_1 — brms_null_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_null_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_null_1 — brms_null_1","text":"","code":"brms_null_1"},{"path":"https://easystats.github.io/circus/reference/brms_null_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_null_1 — brms_null_1","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_null_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_null_1 — brms_null_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(333) brms::brm(mpg ~ 1, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_null_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_null_2 — brms_null_2","title":"brms_null_2 — brms_null_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_null_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_null_2 — brms_null_2","text":"","code":"brms_null_2"},{"path":"https://easystats.github.io/circus/reference/brms_null_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_null_2 — brms_null_2","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_null_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_null_2 — brms_null_2","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(333) brms::brm(mpg ~ 1 + (1 | cyl), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_ordinal_1 — brms_ordinal_1","title":"brms_ordinal_1 — brms_ordinal_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_ordinal_1 — brms_ordinal_1","text":"","code":"brms_ordinal_1"},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_ordinal_1 — brms_ordinal_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_ordinal_1 — brms_ordinal_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data(mtcars) mtcars$cyl_ord <- as.ordered(mtcars$cyl) brms::brm(cyl_ord ~ mpg, data = mtcars, family = cumulative()) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1_wt.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_ordinal_1_wt — brms_ordinal_1_wt","title":"brms_ordinal_1_wt — brms_ordinal_1_wt","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1_wt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_ordinal_1_wt — brms_ordinal_1_wt","text":"","code":"brms_ordinal_1_wt"},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1_wt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_ordinal_1_wt — brms_ordinal_1_wt","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_1_wt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_ordinal_1_wt — brms_ordinal_1_wt","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data(mtcars) mtcars$cyl_ord <- as.ordered(mtcars$cyl) brms::brm(cyl_ord | weights(wt) ~ mpg, data = mtcars, family = cumulative()) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_ordinal_2 — brms_ordinal_2","title":"brms_ordinal_2 — brms_ordinal_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_ordinal_2 — brms_ordinal_2","text":"","code":"brms_ordinal_2"},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_ordinal_2 — brms_ordinal_2","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_ordinal_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_ordinal_2 — brms_ordinal_2","text":"","code":"if (FALSE) { # \\dontrun{ data(inhaler) brm(   rating ~ treat + period + carry + (1 | subject),   family = cumulative(),   data = inhaler ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_sigma_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_sigma_1 — brms_sigma_1","title":"brms_sigma_1 — brms_sigma_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_sigma_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_sigma_1 — brms_sigma_1","text":"","code":"brms_sigma_1"},{"path":"https://easystats.github.io/circus/reference/brms_sigma_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_sigma_1 — brms_sigma_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_sigma_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_sigma_1 — brms_sigma_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) brm(bf(mpg ~ hp + (1 | cyl), sigma ~ cyl), data = mtcars, seed = 123) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_sigma_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_sigma_2 — brms_sigma_2","title":"brms_sigma_2 — brms_sigma_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_sigma_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_sigma_2 — brms_sigma_2","text":"","code":"brms_sigma_2"},{"path":"https://easystats.github.io/circus/reference/brms_sigma_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_sigma_2 — brms_sigma_2","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_sigma_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_sigma_2 — brms_sigma_2","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) d <- data.frame(   Condition = rep(c(\"A\", \"B\", \"C\"), each=30),   Participant = as.factor(rep_len(paste0(\"S\", 1:5), 90)),   Response = rnorm(90) ) brm(   bf(     Response ~ Condition + (Condition | Participant),     sigma ~ Condition + (Condition | Participant),     family = exgaussian()   ),   data = d,   iter = 2000,   chains = 4,   cores = 4,   backend = \"cmdstanr\" ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_sigma_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_sigma_3 — brms_sigma_3","title":"brms_sigma_3 — brms_sigma_3","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_sigma_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_sigma_3 — brms_sigma_3","text":"","code":"brms_sigma_3"},{"path":"https://easystats.github.io/circus/reference/brms_sigma_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_sigma_3 — brms_sigma_3","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_sigma_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_sigma_3 — brms_sigma_3","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) data(iris) iris$Group <- as.factor(rep(c(\"G1\", \"G2\", \"G3\"), each = 50)) brms_sigma_3 <- brms::brm(   brms::bf(     Sepal.Width ~ Petal.Width + (Petal.Width | Group),     sigma ~ Petal.Width + (Petal.Width | Group)   ),   data = iris,   refresh=0 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_smooth_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_smooth_1 — brms_smooth_1","title":"brms_smooth_1 — brms_smooth_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_smooth_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_smooth_1 — brms_smooth_1","text":"","code":"brms_smooth_1"},{"path":"https://easystats.github.io/circus/reference/brms_smooth_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_smooth_1 — brms_smooth_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_smooth_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_smooth_1 — brms_smooth_1","text":"","code":"if (FALSE) { # \\dontrun{ dat <- mgcv::gamSim(1, n = 200, scale = 2) brm(y ~ s(x0) + s(x1) + s(x2) + s(x3), data = dat, iter = 1000) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_smooth_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_smooth_2 — brms_smooth_2","title":"brms_smooth_2 — brms_smooth_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_smooth_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_smooth_2 — brms_smooth_2","text":"","code":"brms_smooth_2"},{"path":"https://easystats.github.io/circus/reference/brms_smooth_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_smooth_2 — brms_smooth_2","text":"object class brmsfit length 21.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_smooth_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_smooth_2 — brms_smooth_2","text":"","code":"if (FALSE) { # \\dontrun{ dat <- mgcv::gamSim(1, n = 200, scale = 2) brm(y ~ t2(x0, x1) + s(x2, by = x3), data = dat, iter = 1000) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_trunc_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_trunc_1 — brms_trunc_1","title":"brms_trunc_1 — brms_trunc_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_trunc_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_trunc_1 — brms_trunc_1","text":"","code":"brms_trunc_1"},{"path":"https://easystats.github.io/circus/reference/brms_trunc_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_trunc_1 — brms_trunc_1","text":"object class brmsfit length 22.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_trunc_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_trunc_1 — brms_trunc_1","text":"","code":"if (FALSE) { # \\dontrun{ data(epilepsy) brms_trunc_1 <- brm(   count | trunc(ub = 104) ~ zBase * Trt,   data = epilepsy,   family = poisson(),   backend = \"cmdstanr\",   cores = 4 )# } }"},{"path":"https://easystats.github.io/circus/reference/brms_von_mises_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_von_mises_1 — brms_von_mises_1","title":"brms_von_mises_1 — brms_von_mises_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_von_mises_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_von_mises_1 — brms_von_mises_1","text":"","code":"brms_von_mises_1"},{"path":"https://easystats.github.io/circus/reference/brms_von_mises_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_von_mises_1 — brms_von_mises_1","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_von_mises_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_von_mises_1 — brms_von_mises_1","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(   y = runif(200, -pi, pi),   x = as.factor(rep(c(\"a\", \"b\"), 100)) )  f <- brms::bf(   y ~ 0 + Intercept + x,   kappa ~ 0 + Intercept,   family = brms::von_mises() )  brms::brm(   f,   data = df,   refresh = 0,   algorithm = \"pathfinder\",   backend = \"cmdstanr\" ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_zi_1.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_zi_1 — brms_zi_1","title":"brms_zi_1 — brms_zi_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_zi_1 — brms_zi_1","text":"","code":"brms_zi_1"},{"path":"https://easystats.github.io/circus/reference/brms_zi_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_zi_1 — brms_zi_1","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_zi_1 — brms_zi_1","text":"","code":"if (FALSE) { # \\dontrun{ zinb <- read.csv(\"http://stats.idre.ucla.edu/stat/data/fish.csv\") set.seed(123) brms::brm(bf(     count ~ persons + child + camper,     zi ~ child + camper   ),   data = zinb,   family = zero_inflated_poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_zi_2.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_zi_2 — brms_zi_2","title":"brms_zi_2 — brms_zi_2","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_zi_2 — brms_zi_2","text":"","code":"brms_zi_2"},{"path":"https://easystats.github.io/circus/reference/brms_zi_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_zi_2 — brms_zi_2","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_zi_2 — brms_zi_2","text":"","code":"if (FALSE) { # \\dontrun{ zinb <- read.csv(\"http://stats.idre.ucla.edu/stat/data/fish.csv\") set.seed(123) brms::brm(bf(     count ~ persons + child + camper + (1 | persons),     zi ~ child + camper + (1 | persons)   ),   data = zinb,   family = zero_inflated_poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_zi_3.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_zi_3 — brms_zi_3","title":"brms_zi_3 — brms_zi_3","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_zi_3 — brms_zi_3","text":"","code":"brms_zi_3"},{"path":"https://easystats.github.io/circus/reference/brms_zi_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_zi_3 — brms_zi_3","text":"object class brmsfit length 19.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_zi_3 — brms_zi_3","text":"","code":"if (FALSE) { # \\dontrun{ brms::brm(   bf(count ~ child + camper + (1 | persons), zi ~ child + camper + (1 | persons)),   data = zinb,   family = zero_inflated_poisson(),   chains = 1,   iter = 500 ) # } }"},{"path":"https://easystats.github.io/circus/reference/brms_zi_4.html","id":null,"dir":"Reference","previous_headings":"","what":"brms_zi_4 — brms_zi_4","title":"brms_zi_4 — brms_zi_4","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"brms_zi_4 — brms_zi_4","text":"","code":"brms_zi_4"},{"path":"https://easystats.github.io/circus/reference/brms_zi_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"brms_zi_4 — brms_zi_4","text":"object class brmsfit length 23.","code":""},{"path":"https://easystats.github.io/circus/reference/brms_zi_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"brms_zi_4 — brms_zi_4","text":"","code":"if (FALSE) { # \\dontrun{ brms::brm(   bf(     count ~ child + camper + (1 + xb | persons) + (1 + zg | ID),     zi ~ child + livebait + (1 + zg + nofish | ID)   ),   data = zinb,   family = zero_inflated_poisson(),   chains = 1,   iter = 500 ) # } }"},{"path":"https://easystats.github.io/circus/reference/censReg_1.html","id":null,"dir":"Reference","previous_headings":"","what":"censReg_1 — censReg_1","title":"censReg_1 — censReg_1","text":"Model class censReg","code":""},{"path":"https://easystats.github.io/circus/reference/censReg_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"censReg_1 — censReg_1","text":"","code":"censReg_1"},{"path":"https://easystats.github.io/circus/reference/censReg_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"censReg_1 — censReg_1","text":"object class censReg (inherits maxLik, maxim, list) length 20.","code":""},{"path":"https://easystats.github.io/circus/reference/censReg_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"censReg_1 — censReg_1","text":"","code":"if (FALSE) { censReg(   affairs ~ age + yearsmarried + religiousness + occupation + rating,   data = Affairs ) }"},{"path":"https://easystats.github.io/circus/reference/clm2_1.html","id":null,"dir":"Reference","previous_headings":"","what":"clm2_1 — clm2_1","title":"clm2_1 — clm2_1","text":"Model class clm2","code":""},{"path":"https://easystats.github.io/circus/reference/clm2_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clm2_1 — clm2_1","text":"","code":"clm2_1"},{"path":"https://easystats.github.io/circus/reference/clm2_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"clm2_1 — clm2_1","text":"object class clm2 length 25.","code":""},{"path":"https://easystats.github.io/circus/reference/clm2_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"clm2_1 — clm2_1","text":"","code":"if (FALSE) { clm2_1 <- clm2(rating ~ temp * contact, data = wine) }"},{"path":"https://easystats.github.io/circus/reference/clm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"clm_1 — clm_1","title":"clm_1 — clm_1","text":"Model class clm","code":""},{"path":"https://easystats.github.io/circus/reference/clm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clm_1 — clm_1","text":"","code":"clm_1"},{"path":"https://easystats.github.io/circus/reference/clm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"clm_1 — clm_1","text":"object class clm length 34.","code":""},{"path":"https://easystats.github.io/circus/reference/clm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"clm_1 — clm_1","text":"","code":"if (FALSE) { clm_1 <- clm(rating ~ temp * contact, data = wine) }"},{"path":"https://easystats.github.io/circus/reference/download_data_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Download rda files from github — download_data_github","title":"Download rda files from github — download_data_github","text":"Download rda files github","code":""},{"path":"https://easystats.github.io/circus/reference/download_data_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download rda files from github — download_data_github","text":"","code":"download_data_github(url)"},{"path":"https://easystats.github.io/circus/reference/download_data_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download rda files from github — download_data_github","text":"url URL rdata file.","code":""},{"path":"https://easystats.github.io/circus/reference/download_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Download circus models — download_model","title":"Download circus models — download_model","text":"Download circus models","code":""},{"path":"https://easystats.github.io/circus/reference/download_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download circus models — download_model","text":"","code":"download_model(name)"},{"path":"https://easystats.github.io/circus/reference/download_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download circus models — download_model","text":"name Model name.","code":""},{"path":"https://easystats.github.io/circus/reference/gam_mv_1.html","id":null,"dir":"Reference","previous_headings":"","what":"gam_mv_1 — gam_mv_1","title":"gam_mv_1 — gam_mv_1","text":"Model class gam","code":""},{"path":"https://easystats.github.io/circus/reference/gam_mv_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gam_mv_1 — gam_mv_1","text":"","code":"gam_mv_1"},{"path":"https://easystats.github.io/circus/reference/gam_mv_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gam_mv_1 — gam_mv_1","text":"object class gam (inherits glm, lm) length 53.","code":""},{"path":"https://easystats.github.io/circus/reference/gam_mv_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gam_mv_1 — gam_mv_1","text":"","code":"if (FALSE) { library(mgcv) V <- matrix(c(2, 1, 1, 2), 2, 2) f0 <- function(x) 2 * sin(pi * x) f1 <- function(x) exp(2 * x) f2 <- function(x) 0.2 * x ^ 11 * (10 * (1 - x)) ^ 6 + 10 * (10 * x) ^ 3 * (1 - x) ^ 10  n <- 300 x0 <- runif(n) x1 <- runif(n) x2 <- runif(n) x3 <- runif(n) y <- matrix(0, n, 2)  for (i in 1:n) {   mu <- c(f0(x0[i]) + f1(x1[i]), f2(x2[i]))   y[i, ] <- rmvn(1, mu, V) }  dat <- data.frame(y0 = y[, 1], y1 = y[, 2], x0 = x0, x1 = x1, x2 = x2, x3 = x3)  gam(list(y0 ~ s(x0) + s(x1), y1 ~ s(x2) + s(x3)), family = mvn(d = 2), data = dat) }"},{"path":"https://easystats.github.io/circus/reference/gam_zi_1.html","id":null,"dir":"Reference","previous_headings":"","what":"gam_zi_1 — gam_zi_1","title":"gam_zi_1 — gam_zi_1","text":"Model class gam","code":""},{"path":"https://easystats.github.io/circus/reference/gam_zi_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gam_zi_1 — gam_zi_1","text":"","code":"gam_zi_1"},{"path":"https://easystats.github.io/circus/reference/gam_zi_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gam_zi_1 — gam_zi_1","text":"object class gam (inherits glm, lm) length 53.","code":""},{"path":"https://easystats.github.io/circus/reference/gam_zi_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gam_zi_1 — gam_zi_1","text":"","code":"if (FALSE) { library(mgcv) f0 <- function(x) 2 * sin(pi * x) f1 <- function(x) exp(2 * x) f2 <- function(x) 0.2 * x ^ 11 * (10 * (1 - x)) ^ 6 + 10 * (10 * x) ^ 3 * (1 - x) ^ 10 n <- 500 set.seed(5) x0 <- runif(n) x1 <- runif(n) x2 <- runif(n) x3 <- runif(n)  eta1 <- f0(x0) + f1(x1) - 3 p <- binomial()$linkinv(eta1) y <- as.numeric(runif(n) < p) ## 1 for presence, 0 for absence  ind <- y > 0 eta2 <- f2(x2[ind]) / 3 y[ind] <- rpois(exp(eta2), exp(eta2))  gam(list(y ~ s(x2) + s(x3),  ~ s(x0) + s(x1)), family = ziplss()) }"},{"path":"https://easystats.github.io/circus/reference/gamlss_1.html","id":null,"dir":"Reference","previous_headings":"","what":"gamlss_1 — gamlss_1","title":"gamlss_1 — gamlss_1","text":"Model class gamlss","code":""},{"path":"https://easystats.github.io/circus/reference/gamlss_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gamlss_1 — gamlss_1","text":"","code":"gamlss_1"},{"path":"https://easystats.github.io/circus/reference/gamlss_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gamlss_1 — gamlss_1","text":"object class gamlss (inherits gam, glm, lm) length 88.","code":""},{"path":"https://easystats.github.io/circus/reference/gamlss_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gamlss_1 — gamlss_1","text":"","code":"if (FALSE) { data(abdom) gamlss(   y ~ pb(x), sigma.formula =  ~ pb(x),   family = BCT, data = abdom, method = mixed(1, 20) ) }"},{"path":"https://easystats.github.io/circus/reference/gamlss_2.html","id":null,"dir":"Reference","previous_headings":"","what":"gamlss_2 — gamlss_2","title":"gamlss_2 — gamlss_2","text":"Model class gamlss","code":""},{"path":"https://easystats.github.io/circus/reference/gamlss_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gamlss_2 — gamlss_2","text":"","code":"gamlss_2"},{"path":"https://easystats.github.io/circus/reference/gamlss_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gamlss_2 — gamlss_2","text":"object class gamlss (inherits gam, glm, lm) length 51.","code":""},{"path":"https://easystats.github.io/circus/reference/gamlss_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"gamlss_2 — gamlss_2","text":"","code":"if (FALSE) { data(aids) gamlss(y ~ x + qrt, data = aids, family = NBI) }"},{"path":"https://easystats.github.io/circus/reference/glm_0.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_0 — glm_0","title":"glm_0 — glm_0","text":"Model class glm","code":""},{"path":"https://easystats.github.io/circus/reference/glm_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_0 — glm_0","text":"","code":"glm_0"},{"path":"https://easystats.github.io/circus/reference/glm_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glm_0 — glm_0","text":"object class glm (inherits lm) length 30.","code":""},{"path":"https://easystats.github.io/circus/reference/glm_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glm_0 — glm_0","text":"","code":"if (FALSE) { glm(formula = vs ~ 1, family = \"binomial\", data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/glm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_1 — glm_1","title":"glm_1 — glm_1","text":"Model class glm","code":""},{"path":"https://easystats.github.io/circus/reference/glm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_1 — glm_1","text":"","code":"glm_1"},{"path":"https://easystats.github.io/circus/reference/glm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glm_1 — glm_1","text":"object class glm (inherits lm) length 30.","code":""},{"path":"https://easystats.github.io/circus/reference/glm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glm_1 — glm_1","text":"","code":"if (FALSE) { glm(formula = vs ~ wt, family = \"binomial\", data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/glm_2.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_2 — glm_2","title":"glm_2 — glm_2","text":"Model class glm","code":""},{"path":"https://easystats.github.io/circus/reference/glm_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_2 — glm_2","text":"","code":"glm_2"},{"path":"https://easystats.github.io/circus/reference/glm_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glm_2 — glm_2","text":"object class glm (inherits lm) length 30.","code":""},{"path":"https://easystats.github.io/circus/reference/glm_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glm_2 — glm_2","text":"","code":"if (FALSE) { glm(formula = vs ~ wt + cyl, family = \"binomial\", data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/glm_3.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_3 — glm_3","title":"glm_3 — glm_3","text":"Model class glm","code":""},{"path":"https://easystats.github.io/circus/reference/glm_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_3 — glm_3","text":"","code":"glm_3"},{"path":"https://easystats.github.io/circus/reference/glm_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glm_3 — glm_3","text":"object class glm (inherits lm) length 30.","code":""},{"path":"https://easystats.github.io/circus/reference/glm_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glm_3 — glm_3","text":"","code":"if (FALSE) { glm(formula = vs ~ wt * cyl, family = \"binomial\", data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/glm_4.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_4 — glm_4","title":"glm_4 — glm_4","text":"Model class glm","code":""},{"path":"https://easystats.github.io/circus/reference/glm_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_4 — glm_4","text":"","code":"glm_4"},{"path":"https://easystats.github.io/circus/reference/glm_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glm_4 — glm_4","text":"object class glm (inherits lm) length 30.","code":""},{"path":"https://easystats.github.io/circus/reference/glm_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glm_4 — glm_4","text":"","code":"if (FALSE) { glm(  formula = vs ~ wt + cyl,  family = binomial(link = \"probit\"),  data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/glm_5.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_5 — glm_5","title":"glm_5 — glm_5","text":"Model class glm","code":""},{"path":"https://easystats.github.io/circus/reference/glm_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_5 — glm_5","text":"","code":"glm_5"},{"path":"https://easystats.github.io/circus/reference/glm_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glm_5 — glm_5","text":"object class glm (inherits lm) length 30.","code":""},{"path":"https://easystats.github.io/circus/reference/glm_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glm_5 — glm_5","text":"","code":"if (FALSE) { set.seed(123) mtcars$count <- rpois(nrow(mtcars), 2) glm(formula = count ~ wt + cyl, family = \"poisson\", data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/glm_nb_1.html","id":null,"dir":"Reference","previous_headings":"","what":"glm_nb_1 — glm_nb_1","title":"glm_nb_1 — glm_nb_1","text":"Model class glm","code":""},{"path":"https://easystats.github.io/circus/reference/glm_nb_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glm_nb_1 — glm_nb_1","text":"","code":"glm_nb_1"},{"path":"https://easystats.github.io/circus/reference/glm_nb_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glm_nb_1 — glm_nb_1","text":"object class negbin (inherits glm, lm) length 31.","code":""},{"path":"https://easystats.github.io/circus/reference/glm_nb_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glm_nb_1 — glm_nb_1","text":"","code":"if (FALSE) { library(MASS) data(efc, package = \"sjmisc\") glm.nb(tot_sc_e ~ neg_c_7 + e42dep + c172code, data = efc) }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_1.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_1 — glmmTMB_1","title":"glmmTMB_1 — glmmTMB_1","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_1 — glmmTMB_1","text":"","code":"glmmTMB_1"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_1 — glmmTMB_1","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_1 — glmmTMB_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) fish <- read.csv(\"https://stats.idre.ucla.edu/stat/data/fish.csv\") fish$nofish <- as.factor(fish$nofish) fish$livebait <- as.factor(fish$livebait) fish$camper <- as.factor(fish$camper) fish$ID <- sample(1:4, nrow(fish), replace = TRUE)  glmmTMB(   count ~ child + camper + (1 | persons),   data = fish,   family = poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_2.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_2 — glmmTMB_2","title":"glmmTMB_2 — glmmTMB_2","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_2 — glmmTMB_2","text":"","code":"glmmTMB_2"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_2 — glmmTMB_2","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_2 — glmmTMB_2","text":"","code":"if (FALSE) { # \\dontrun{ glmmTMB(count ~ mined + (1 | site),   ziformula =  ~ mined,   family = poisson,   data = Salamanders ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_3.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_3 — glmmTMB_3","title":"glmmTMB_3 — glmmTMB_3","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_3 — glmmTMB_3","text":"","code":"glmmTMB_3"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_3 — glmmTMB_3","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_3 — glmmTMB_3","text":"","code":"if (FALSE) { # \\dontrun{ glmmTMB(   count ~ spp + mined + (1 | site),   ziformula =  ~ spp + mined,   family = nbinom2,   data = Salamanders ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_4.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_4 — glmmTMB_4","title":"glmmTMB_4 — glmmTMB_4","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_4 — glmmTMB_4","text":"","code":"glmmTMB_4"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_4 — glmmTMB_4","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_4 — glmmTMB_4","text":"","code":"if (FALSE) { # \\dontrun{ glmmTMB(   count ~ spp + mined + (1 | site),   ziformula =  ~ spp + mined,   family = truncated_poisson,   data = Salamanders ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_5.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_5 — glmmTMB_5","title":"glmmTMB_5 — glmmTMB_5","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_5 — glmmTMB_5","text":"","code":"glmmTMB_5"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_5 — glmmTMB_5","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_5 — glmmTMB_5","text":"","code":"if (FALSE) { # \\dontrun{ data(cbpp, package = \"lme4\") glmmTMB(   cbind(incidence, size - incidence) ~ period + (1 | herd),   data = cbpp,   family = binomial ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_spatial_1.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_spatial_1 — glmmTMB_spatial_1","title":"glmmTMB_spatial_1 — glmmTMB_spatial_1","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_spatial_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_spatial_1 — glmmTMB_spatial_1","text":"","code":"glmmTMB_spatial_1"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_spatial_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_spatial_1 — glmmTMB_spatial_1","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_spatial_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_spatial_1 — glmmTMB_spatial_1","text":"","code":"if (FALSE) { # \\dontrun{ library(geoR) data(ca20) dat <- data.frame(   x = ca20$coords[, 1],   y = ca20$coords[, 2],   calcium = ca20$data,   elevation = ca20$covariate[, 1],   region = factor(ca20$covariate[, 2]) ) dat$pos <- numFactor(scale(dat$x), scale(dat$y)) dat$ID <- factor(rep(1, nrow(dat)))  glmmTMB(calcium ~ elevation + region + mat(pos + 0 | ID), data = dat) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_1.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_zi_1 — glmmTMB_zi_1","title":"glmmTMB_zi_1 — glmmTMB_zi_1","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_zi_1 — glmmTMB_zi_1","text":"","code":"glmmTMB_zi_1"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_zi_1 — glmmTMB_zi_1","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_zi_1 — glmmTMB_zi_1","text":"","code":"if (FALSE) { # \\dontrun{ # data prepararion: see \"glmmTMB_1\"  glmmTMB(   count ~ child + camper + (1 | persons),   ziformula = ~ child + camper + (1 | persons),   data = fish,   family = truncated_poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_2.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_zi_2 — glmmTMB_zi_2","title":"glmmTMB_zi_2 — glmmTMB_zi_2","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_zi_2 — glmmTMB_zi_2","text":"","code":"glmmTMB_zi_2"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_zi_2 — glmmTMB_zi_2","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_zi_2 — glmmTMB_zi_2","text":"","code":"if (FALSE) { # \\dontrun{ # data prepararion: see \"glmmTMB_1\"  glmmTMB(   count ~ child + camper + (1 | persons),   ziformula = ~ child + livebait + (1 | persons),   data = fish,   family = poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_3.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_zi_3 — glmmTMB_zi_3","title":"glmmTMB_zi_3 — glmmTMB_zi_3","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_zi_3 — glmmTMB_zi_3","text":"","code":"glmmTMB_zi_3"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_zi_3 — glmmTMB_zi_3","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_zi_3 — glmmTMB_zi_3","text":"","code":"if (FALSE) { # \\dontrun{ # data prepararion: see \"glmmTMB_1\"  glmmTMB(   count ~ child + camper + (1 | persons),   ziformula = ~ child + livebait + (1 | persons),   dispformula = ~xb,   data = fish,   family = truncated_poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_4.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_zi_4 — glmmTMB_zi_4","title":"glmmTMB_zi_4 — glmmTMB_zi_4","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_zi_4 — glmmTMB_zi_4","text":"","code":"glmmTMB_zi_4"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_zi_4 — glmmTMB_zi_4","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_zi_4 — glmmTMB_zi_4","text":"","code":"if (FALSE) { # \\dontrun{ # data prepararion: see \"glmmTMB_1\"  glmmTMB(   count ~ child + camper + (1 + zg | persons) + (1 | nofish),   ziformula = ~ child + livebait + (1 | persons),   data = fish,   family = truncated_poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_5.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_zi_5 — glmmTMB_zi_5","title":"glmmTMB_zi_5 — glmmTMB_zi_5","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_zi_5 — glmmTMB_zi_5","text":"","code":"glmmTMB_zi_5"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_zi_5 — glmmTMB_zi_5","text":"object class glmmTMB length 7.","code":""},{"path":[]},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_6.html","id":null,"dir":"Reference","previous_headings":"","what":"glmmTMB_zi_6 — glmmTMB_zi_6","title":"glmmTMB_zi_6 — glmmTMB_zi_6","text":"Model class glmmTMB","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"glmmTMB_zi_6 — glmmTMB_zi_6","text":"","code":"glmmTMB_zi_6"},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"glmmTMB_zi_6 — glmmTMB_zi_6","text":"object class glmmTMB length 7.","code":""},{"path":"https://easystats.github.io/circus/reference/glmmTMB_zi_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"glmmTMB_zi_6 — glmmTMB_zi_6","text":"","code":"if (FALSE) { # \\dontrun{ # data prepararion: see \"glmmTMB_1\"  glmmTMB(   count ~ child + camper + (1 + xb | persons),   ziformula = ~ child + livebait + (1 + zg + nofish | ID),   dispformula = ~xb,   data = fish,   family = truncated_poisson() ) # } }"},{"path":"https://easystats.github.io/circus/reference/htest_1.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_1 — htest_1","title":"htest_1 — htest_1","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_1 — htest_1","text":"","code":"htest_1"},{"path":"https://easystats.github.io/circus/reference/htest_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_1 — htest_1","text":"object class htest length 8.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_1 — htest_1","text":"","code":"if (FALSE) { cor.test(iris$Sepal.Width, iris$Sepal.Length, method = \"spearman\") }"},{"path":"https://easystats.github.io/circus/reference/htest_2.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_2 — htest_2","title":"htest_2 — htest_2","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_2 — htest_2","text":"","code":"htest_2"},{"path":"https://easystats.github.io/circus/reference/htest_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_2 — htest_2","text":"object class htest length 9.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_2 — htest_2","text":"","code":"if (FALSE) { cor.test(iris$Sepal.Width, iris$Sepal.Length, method = \"pearson\") }"},{"path":"https://easystats.github.io/circus/reference/htest_3.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_3 — htest_3","title":"htest_3 — htest_3","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_3 — htest_3","text":"","code":"htest_3"},{"path":"https://easystats.github.io/circus/reference/htest_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_3 — htest_3","text":"object class htest length 8.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_3 — htest_3","text":"","code":"if (FALSE) { cor.test(iris$Sepal.Width, iris$Sepal.Length, method = \"kendall\") }"},{"path":"https://easystats.github.io/circus/reference/htest_4.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_4 — htest_4","title":"htest_4 — htest_4","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_4 — htest_4","text":"","code":"htest_4"},{"path":"https://easystats.github.io/circus/reference/htest_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_4 — htest_4","text":"object class htest length 9.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_4 — htest_4","text":"","code":"if (FALSE) { t.test(iris$Sepal.Width, iris$Sepal.Length) }"},{"path":"https://easystats.github.io/circus/reference/htest_5.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_5 — htest_5","title":"htest_5 — htest_5","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_5 — htest_5","text":"","code":"htest_5"},{"path":"https://easystats.github.io/circus/reference/htest_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_5 — htest_5","text":"object class htest length 9.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_5 — htest_5","text":"","code":"if (FALSE) { t.test(iris$Sepal.Width, iris$Sepal.Length, var.equal = TRUE) }"},{"path":"https://easystats.github.io/circus/reference/htest_6.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_6 — htest_6","title":"htest_6 — htest_6","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_6 — htest_6","text":"","code":"htest_6"},{"path":"https://easystats.github.io/circus/reference/htest_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_6 — htest_6","text":"object class htest length 9.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_6 — htest_6","text":"","code":"if (FALSE) { t.test(iris$Sepal.Width, iris$Sepal.Length) }"},{"path":"https://easystats.github.io/circus/reference/htest_7.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_7 — htest_7","title":"htest_7 — htest_7","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_7 — htest_7","text":"","code":"htest_7"},{"path":"https://easystats.github.io/circus/reference/htest_7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_7 — htest_7","text":"object class htest length 9.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_7 — htest_7","text":"","code":"if (FALSE) { t.test(mtcars$mpg ~ mtcars$vs) }"},{"path":"https://easystats.github.io/circus/reference/htest_8.html","id":null,"dir":"Reference","previous_headings":"","what":"htest_8 — htest_8","title":"htest_8 — htest_8","text":"Model class htest","code":""},{"path":"https://easystats.github.io/circus/reference/htest_8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"htest_8 — htest_8","text":"","code":"htest_8"},{"path":"https://easystats.github.io/circus/reference/htest_8.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"htest_8 — htest_8","text":"object class htest length 9.","code":""},{"path":"https://easystats.github.io/circus/reference/htest_8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"htest_8 — htest_8","text":"","code":"if (FALSE) { t.test(iris$Sepal.Width, mu = 1) }"},{"path":"https://easystats.github.io/circus/reference/ivreg_1.html","id":null,"dir":"Reference","previous_headings":"","what":"ivreg_1 — ivreg_1","title":"ivreg_1 — ivreg_1","text":"Model class ivreg","code":""},{"path":"https://easystats.github.io/circus/reference/ivreg_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ivreg_1 — ivreg_1","text":"","code":"ivreg_1"},{"path":"https://easystats.github.io/circus/reference/ivreg_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ivreg_1 — ivreg_1","text":"object class ivreg length 18.","code":""},{"path":"https://easystats.github.io/circus/reference/ivreg_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ivreg_1 — ivreg_1","text":"","code":"if (FALSE) { data(CigarettesSW) CigarettesSW$rprice <- with(CigarettesSW, price / cpi) CigarettesSW$rincome <- with(CigarettesSW, income / population / cpi) CigarettesSW$tdiff <- with(CigarettesSW, (taxs - tax) / cpi)  ivreg_1 <- ivreg(   log(packs) ~ log(rprice) + log(rincome) | log(rincome) + tdiff + I(tax / cpi),   data = CigarettesSW,   subset = year == \"1995\" ) }"},{"path":"https://easystats.github.io/circus/reference/lm_0.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_0 — lm_0","title":"lm_0 — lm_0","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_0 — lm_0","text":"","code":"lm_0"},{"path":"https://easystats.github.io/circus/reference/lm_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_0 — lm_0","text":"object class lm length 11.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_0 — lm_0","text":"","code":"if (FALSE) { lm(formula = mpg ~ 1, data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_1 — lm_1","title":"lm_1 — lm_1","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_1 — lm_1","text":"","code":"lm_1"},{"path":"https://easystats.github.io/circus/reference/lm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_1 — lm_1","text":"object class lm length 12.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_1 — lm_1","text":"","code":"if (FALSE) { lm_1 <- lm(mpg ~ wt, data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lm_2.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_2 — lm_2","title":"lm_2 — lm_2","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_2 — lm_2","text":"","code":"lm_2"},{"path":"https://easystats.github.io/circus/reference/lm_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_2 — lm_2","text":"object class lm length 12.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_2 — lm_2","text":"","code":"if (FALSE) { lm_1 <- lm(mpg ~ wt + cyl, data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lm_3.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_3 — lm_3","title":"lm_3 — lm_3","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_3 — lm_3","text":"","code":"lm_3"},{"path":"https://easystats.github.io/circus/reference/lm_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_3 — lm_3","text":"object class lm length 12.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_3 — lm_3","text":"","code":"if (FALSE) { lm(formula = mpg ~ wt * cyl, data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lm_4.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_4 — lm_4","title":"lm_4 — lm_4","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_4 — lm_4","text":"","code":"lm_4"},{"path":"https://easystats.github.io/circus/reference/lm_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_4 — lm_4","text":"object class lm length 12.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_4 — lm_4","text":"","code":"if (FALSE) { lm(formula = mpg ~ wt + poly(cyl, 2), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lm_5.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_5 — lm_5","title":"lm_5 — lm_5","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_5 — lm_5","text":"","code":"lm_5"},{"path":"https://easystats.github.io/circus/reference/lm_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_5 — lm_5","text":"object class lm length 12.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_5 — lm_5","text":"","code":"if (FALSE) { lm(formula = mpg ~ wt + poly(cyl, 2, raw = TRUE), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lm_6.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_6 — lm_6","title":"lm_6 — lm_6","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_6 — lm_6","text":"","code":"lm_6"},{"path":"https://easystats.github.io/circus/reference/lm_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_6 — lm_6","text":"object class lm length 13.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_6 — lm_6","text":"","code":"if (FALSE) { lm(formula = mpg ~ wt * as.factor(gear), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lm_7.html","id":null,"dir":"Reference","previous_headings":"","what":"lm_7 — lm_7","title":"lm_7 — lm_7","text":"Model class lm","code":""},{"path":"https://easystats.github.io/circus/reference/lm_7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lm_7 — lm_7","text":"","code":"lm_7"},{"path":"https://easystats.github.io/circus/reference/lm_7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lm_7 — lm_7","text":"object class lm length 13.","code":""},{"path":"https://easystats.github.io/circus/reference/lm_7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lm_7 — lm_7","text":"","code":"if (FALSE) { lm(formula = mpg ~ as.factor(gear)/wt, data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lmerMod_0.html","id":null,"dir":"Reference","previous_headings":"","what":"lmerMod_0 — lmerMod_0","title":"lmerMod_0 — lmerMod_0","text":"Model class lmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lmerMod_0 — lmerMod_0","text":"","code":"lmerMod_0"},{"path":"https://easystats.github.io/circus/reference/lmerMod_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lmerMod_0 — lmerMod_0","text":"object class lmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lmerMod_0 — lmerMod_0","text":"","code":"if (FALSE) { lme4::lmer(wt ~ 1 + (1 | gear), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lmerMod_1.html","id":null,"dir":"Reference","previous_headings":"","what":"lmerMod_1 — lmerMod_1","title":"lmerMod_1 — lmerMod_1","text":"Model class lmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lmerMod_1 — lmerMod_1","text":"","code":"lmerMod_1"},{"path":"https://easystats.github.io/circus/reference/lmerMod_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lmerMod_1 — lmerMod_1","text":"object class lmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lmerMod_1 — lmerMod_1","text":"","code":"if (FALSE) { lme4::lmer(wt ~ cyl + (1 | gear), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lmerMod_2.html","id":null,"dir":"Reference","previous_headings":"","what":"lmerMod_2 — lmerMod_2","title":"lmerMod_2 — lmerMod_2","text":"Model class lmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lmerMod_2 — lmerMod_2","text":"","code":"lmerMod_2"},{"path":"https://easystats.github.io/circus/reference/lmerMod_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lmerMod_2 — lmerMod_2","text":"object class lmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lmerMod_2 — lmerMod_2","text":"","code":"if (FALSE) { lme4::lmer(wt ~ drat + cyl + (1 | gear), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lmerMod_3.html","id":null,"dir":"Reference","previous_headings":"","what":"lmerMod_3 — lmerMod_3","title":"lmerMod_3 — lmerMod_3","text":"Model class lmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lmerMod_3 — lmerMod_3","text":"","code":"lmerMod_3"},{"path":"https://easystats.github.io/circus/reference/lmerMod_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lmerMod_3 — lmerMod_3","text":"object class lmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lmerMod_3 — lmerMod_3","text":"","code":"if (FALSE) { lme4::lmer(wt ~ drat * cyl + (1 | gear), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lmerMod_4.html","id":null,"dir":"Reference","previous_headings":"","what":"lmerMod_4 — lmerMod_4","title":"lmerMod_4 — lmerMod_4","text":"Model class lmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lmerMod_4 — lmerMod_4","text":"","code":"lmerMod_4"},{"path":"https://easystats.github.io/circus/reference/lmerMod_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lmerMod_4 — lmerMod_4","text":"object class lmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lmerMod_4 — lmerMod_4","text":"","code":"if (FALSE) { lme4::lmer(wt ~ drat/cyl + (1 | gear), data = mtcars) }"},{"path":"https://easystats.github.io/circus/reference/lmerMod_5.html","id":null,"dir":"Reference","previous_headings":"","what":"lmerMod_5 — lmerMod_5","title":"lmerMod_5 — lmerMod_5","text":"Model class lmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lmerMod_5 — lmerMod_5","text":"","code":"lmerMod_5"},{"path":"https://easystats.github.io/circus/reference/lmerMod_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lmerMod_5 — lmerMod_5","text":"object class lmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/lmerMod_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lmerMod_5 — lmerMod_5","text":"","code":"if (FALSE) { data <- iris data$Cat1 <- rep(c(\"X\", \"X\", \"Y\"), length.out = nrow(data)) data$Cat2 <- rep(c(\"A\", \"B\"), length.out = nrow(data)) lme4::lmer(Petal.Width ~ Cat1 + (1 + Cat1 | Species), data = data) }"},{"path":"https://easystats.github.io/circus/reference/merMod_0.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod_0 — merMod_0","title":"merMod_0 — merMod_0","text":"Model class merMod","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod_0 — merMod_0","text":"","code":"merMod_0"},{"path":"https://easystats.github.io/circus/reference/merMod_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"merMod_0 — merMod_0","text":"object class glmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod_0 — merMod_0","text":"","code":"if (FALSE) { lme4::glmer(vs ~ 1 + (1 | gear), data = mtcars, family = \"binomial\") }"},{"path":"https://easystats.github.io/circus/reference/merMod_1.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod_1 — merMod_1","title":"merMod_1 — merMod_1","text":"Model class merMod","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod_1 — merMod_1","text":"","code":"merMod_1"},{"path":"https://easystats.github.io/circus/reference/merMod_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"merMod_1 — merMod_1","text":"object class glmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod_1 — merMod_1","text":"","code":"if (FALSE) { lme4::glmer(vs ~ cyl + (1 | gear), data = mtcars, family = \"binomial\") }"},{"path":"https://easystats.github.io/circus/reference/merMod_2.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod_2 — merMod_2","title":"merMod_2 — merMod_2","text":"Model class merMod","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod_2 — merMod_2","text":"","code":"merMod_2"},{"path":"https://easystats.github.io/circus/reference/merMod_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"merMod_2 — merMod_2","text":"object class glmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod_2 — merMod_2","text":"","code":"if (FALSE) { lme4::glmer(vs ~ drat + cyl + (1 | gear), data = mtcars, family = \"binomial\") }"},{"path":"https://easystats.github.io/circus/reference/merMod_3.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod_3 — merMod_3","title":"merMod_3 — merMod_3","text":"Model class merMod","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod_3 — merMod_3","text":"","code":"merMod_3"},{"path":"https://easystats.github.io/circus/reference/merMod_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"merMod_3 — merMod_3","text":"object class glmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod_3 — merMod_3","text":"","code":"if (FALSE) { lme4::glmer(vs ~ drat * cyl + (1 | gear), data = mtcars, family = \"binomial\") }"},{"path":"https://easystats.github.io/circus/reference/merMod_4.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod_4 — merMod_4","title":"merMod_4 — merMod_4","text":"Model class merMod","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod_4 — merMod_4","text":"","code":"merMod_4"},{"path":"https://easystats.github.io/circus/reference/merMod_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"merMod_4 — merMod_4","text":"object class glmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod_4 — merMod_4","text":"","code":"if (FALSE) { lme4::glmer(vs ~ cyl + (1 | gear), data = mtcars, family = binomial(link = \"probit\")) }"},{"path":"https://easystats.github.io/circus/reference/merMod_5.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod_5 — merMod_5","title":"merMod_5 — merMod_5","text":"Model class glmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod_5 — merMod_5","text":"","code":"merMod_5"},{"path":"https://easystats.github.io/circus/reference/merMod_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"merMod_5 — merMod_5","text":"object class glmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod_5 — merMod_5","text":"","code":"if (FALSE) { # \\dontrun{ # for data, see '?glmer.nb' lme4::glmer.nb(y ~ f1 * f2 + (1 | g), data = dd) # } }"},{"path":"https://easystats.github.io/circus/reference/merMod_nb_1.html","id":null,"dir":"Reference","previous_headings":"","what":"merMod_nb_1 — merMod_nb_1","title":"merMod_nb_1 — merMod_nb_1","text":"Model class glmerMod","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_nb_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merMod_nb_1 — merMod_nb_1","text":"","code":"merMod_nb_1"},{"path":"https://easystats.github.io/circus/reference/merMod_nb_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"merMod_nb_1 — merMod_nb_1","text":"object class glmerMod length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/merMod_nb_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"merMod_nb_1 — merMod_nb_1","text":"","code":"if (FALSE) { library(lme4) library(glmmTMB) data(Owls) glmer.nb(SiblingNegotiation ~ SexParent + ArrivalTime + (1 | Nest), data = Owls) }"},{"path":"https://easystats.github.io/circus/reference/ordbetareg_1.html","id":null,"dir":"Reference","previous_headings":"","what":"ordbetareg_1 — ordbetareg_1","title":"ordbetareg_1 — ordbetareg_1","text":"Model class brmsfit","code":""},{"path":"https://easystats.github.io/circus/reference/ordbetareg_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ordbetareg_1 — ordbetareg_1","text":"","code":"ordbetareg_1"},{"path":"https://easystats.github.io/circus/reference/ordbetareg_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ordbetareg_1 — ordbetareg_1","text":"object class brmsfit (inherits ordbetareg) length 25.","code":""},{"path":"https://easystats.github.io/circus/reference/ordbetareg_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ordbetareg_1 — ordbetareg_1","text":"","code":"if (FALSE) { # \\dontrun{ library(ordbetareg) data(sleepstudy, package = \"lme4\") sleepstudy$y <- datawizard::normalize(sleepstudy$Reaction) m <- ordbetareg(y ~ Days + (Days | Subject), data = sleepstudy) # } }"},{"path":"https://easystats.github.io/circus/reference/stanmvreg_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanmvreg_1 — stanmvreg_1","title":"stanmvreg_1 — stanmvreg_1","text":"Model class stanmvreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanmvreg_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanmvreg_1 — stanmvreg_1","text":"","code":"stanmvreg_1"},{"path":"https://easystats.github.io/circus/reference/stanmvreg_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanmvreg_1 — stanmvreg_1","text":"object class stanmvreg (inherits stanreg, lmerMod) length 20.","code":""},{"path":"https://easystats.github.io/circus/reference/stanmvreg_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanmvreg_1 — stanmvreg_1","text":"","code":"if (FALSE) { # \\dontrun{ library(rstanarm) stan_mvmer(   formula = list(     logBili ~ year + (1 | id),     albumin ~ sex + year + (year | id)   ),   data = pbcLong,   # this next line is only to keep the example small in size!   chains = 1, cores = 1, seed = 12345, iter = 1000 ) # } }"},{"path":"https://easystats.github.io/circus/reference/stanmvreg_2.html","id":null,"dir":"Reference","previous_headings":"","what":"stanmvreg_2 — stanmvreg_2","title":"stanmvreg_2 — stanmvreg_2","text":"Model class stanmvreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanmvreg_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanmvreg_2 — stanmvreg_2","text":"","code":"stanmvreg_2"},{"path":"https://easystats.github.io/circus/reference/stanmvreg_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanmvreg_2 — stanmvreg_2","text":"object class stanmvreg (inherits stanreg, lmerMod) length 20.","code":""},{"path":"https://easystats.github.io/circus/reference/stanmvreg_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanmvreg_2 — stanmvreg_2","text":"","code":"if (FALSE) { # \\dontrun{ library(rstanarm) library(mediation) data(jobs) stan_mvmer(   list(job_seek ~ treat + econ_hard + sex + age + (1 | occp),        depress2 ~ treat + job_seek + econ_hard + sex + age + (1 | occp)),   data = jobs,   cores = 4,   seed = 1234,   refresh = 0) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_bernoulli_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_bernoulli_1 — stanreg_bernoulli_1","title":"stanreg_bernoulli_1 — stanreg_bernoulli_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_bernoulli_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_bernoulli_1 — stanreg_bernoulli_1","text":"","code":"stanreg_bernoulli_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_bernoulli_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_bernoulli_1 — stanreg_bernoulli_1","text":"object class stanreg (inherits glm, lm) length 28.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_bernoulli_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_bernoulli_1 — stanreg_bernoulli_1","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(1234) dat <- data.frame(   outcome = rbinom(n = 100, size = 1, prob = 0.35),   var_binom = as.factor(rbinom(n = 100, size = 1, prob = 0.3)),   var_cont = rnorm(n = 100, mean = 10, sd = 7),   groups = sample(letters[1:2], size = 100, replace = TRUE) ) set.seed(1234) stan_glm(outcome ~ var_binom * groups + var_cont, data = dat, family = binomial()) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_fullrank_lm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_fullrank_lm_1 — stanreg_fullrank_lm_1","title":"stanreg_fullrank_lm_1 — stanreg_fullrank_lm_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_fullrank_lm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_fullrank_lm_1 — stanreg_fullrank_lm_1","text":"","code":"stanreg_fullrank_lm_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_fullrank_lm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_fullrank_lm_1 — stanreg_fullrank_lm_1","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_fullrank_lm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_fullrank_lm_1 — stanreg_fullrank_lm_1","text":"","code":"if (FALSE) { # \\dontrun{ update(stanreg_lm_1, algorithm = \"fullrank\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_gamm4_1 — stanreg_gamm4_1","title":"stanreg_gamm4_1 — stanreg_gamm4_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_gamm4_1 — stanreg_gamm4_1","text":"","code":"stanreg_gamm4_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_gamm4_1 — stanreg_gamm4_1","text":"object class stanreg (inherits glm, lm, gamm4) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_gamm4_1 — stanreg_gamm4_1","text":"","code":"if (FALSE) { # \\dontrun{ stan_gamm4(Sepal.Width ~ s(Petal.Length), data = iris) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_2.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_gamm4_2 — stanreg_gamm4_2","title":"stanreg_gamm4_2 — stanreg_gamm4_2","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_gamm4_2 — stanreg_gamm4_2","text":"","code":"stanreg_gamm4_2"},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_gamm4_2 — stanreg_gamm4_2","text":"object class stanreg (inherits glm, lm, gamm4) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_gamm4_2 — stanreg_gamm4_2","text":"","code":"if (FALSE) { # \\dontrun{ stan_gamm4(Sepal.Width ~ Species + s(Petal.Length), data = iris) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_3.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_gamm4_3 — stanreg_gamm4_3","title":"stanreg_gamm4_3 — stanreg_gamm4_3","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_gamm4_3 — stanreg_gamm4_3","text":"","code":"stanreg_gamm4_3"},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_gamm4_3 — stanreg_gamm4_3","text":"object class stanreg (inherits glm, lm, gamm4, lmerMod) length 28.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_gamm4_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_gamm4_3 — stanreg_gamm4_3","text":"","code":"if (FALSE) { # \\dontrun{ data <- iris data$Cat1 <- rep(c(\"X\", \"X\", \"Y\"), length.out = nrow(data))  stan_gamm4(   Sepal.Width ~ Species + s(Petal.Length),   random = ~(1 | Cat1),   data = data ) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_0.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_glm_0 — stanreg_glm_0","title":"stanreg_glm_0 — stanreg_glm_0","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_glm_0 — stanreg_glm_0","text":"","code":"stanreg_glm_0"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_glm_0 — stanreg_glm_0","text":"object class stanreg (inherits glm, lm) length 26.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_glm_0 — stanreg_glm_0","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(vs ~ 1, data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_glm_1 — stanreg_glm_1","title":"stanreg_glm_1 — stanreg_glm_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_glm_1 — stanreg_glm_1","text":"","code":"stanreg_glm_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_glm_1 — stanreg_glm_1","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_glm_1 — stanreg_glm_1","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(vs ~ wt, data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_2.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_glm_2 — stanreg_glm_2","title":"stanreg_glm_2 — stanreg_glm_2","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_glm_2 — stanreg_glm_2","text":"","code":"stanreg_glm_2"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_glm_2 — stanreg_glm_2","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_glm_2 — stanreg_glm_2","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(vs ~ wt + cyl, data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_3.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_glm_3 — stanreg_glm_3","title":"stanreg_glm_3 — stanreg_glm_3","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_glm_3 — stanreg_glm_3","text":"","code":"stanreg_glm_3"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_glm_3 — stanreg_glm_3","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_glm_3 — stanreg_glm_3","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(vs ~ wt * cyl, data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_4.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_glm_4 — stanreg_glm_4","title":"stanreg_glm_4 — stanreg_glm_4","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_glm_4 — stanreg_glm_4","text":"","code":"stanreg_glm_4"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_glm_4 — stanreg_glm_4","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_glm_4 — stanreg_glm_4","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(vs ~ wt + cyl, data = mtcars, family = binomial(link = \"probit\")) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_5.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_glm_5 — stanreg_glm_5","title":"stanreg_glm_5 — stanreg_glm_5","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_glm_5 — stanreg_glm_5","text":"","code":"stanreg_glm_5"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_glm_5 — stanreg_glm_5","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_glm_5 — stanreg_glm_5","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) mtcars$count <- rpois(nrow(mtcars), 2) rstanarm::stan_glm(count ~ wt + cyl, data = mtcars, family = \"poisson\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_6.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_glm_6 — stanreg_glm_6","title":"stanreg_glm_6 — stanreg_glm_6","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_glm_6 — stanreg_glm_6","text":"","code":"stanreg_glm_6"},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_glm_6 — stanreg_glm_6","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_glm_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_glm_6 — stanreg_glm_6","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123) rstanarm::stan_glm(Sepal.Width ~ Species * Petal.Length, data = iris) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_0.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_0 — stanreg_lm_0","title":"stanreg_lm_0 — stanreg_lm_0","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_0 — stanreg_lm_0","text":"","code":"stanreg_lm_0"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_0 — stanreg_lm_0","text":"object class stanreg (inherits glm, lm) length 26.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_0 — stanreg_lm_0","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ 1, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_1 — stanreg_lm_1","title":"stanreg_lm_1 — stanreg_lm_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_1 — stanreg_lm_1","text":"","code":"stanreg_lm_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_1 — stanreg_lm_1","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_1 — stanreg_lm_1","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ wt, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_2.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_2 — stanreg_lm_2","title":"stanreg_lm_2 — stanreg_lm_2","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_2 — stanreg_lm_2","text":"","code":"stanreg_lm_2"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_2 — stanreg_lm_2","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_2 — stanreg_lm_2","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ wt + cyl, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_3.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_3 — stanreg_lm_3","title":"stanreg_lm_3 — stanreg_lm_3","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_3 — stanreg_lm_3","text":"","code":"stanreg_lm_3"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_3 — stanreg_lm_3","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_3 — stanreg_lm_3","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ wt * cyl, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_4.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_4 — stanreg_lm_4","title":"stanreg_lm_4 — stanreg_lm_4","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_4 — stanreg_lm_4","text":"","code":"stanreg_lm_4"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_4 — stanreg_lm_4","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_4 — stanreg_lm_4","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ wt + poly(cyl, 2), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_5.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_5 — stanreg_lm_5","title":"stanreg_lm_5 — stanreg_lm_5","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_5 — stanreg_lm_5","text":"","code":"stanreg_lm_5"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_5 — stanreg_lm_5","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_5 — stanreg_lm_5","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ wt + poly(cyl, 2, raw = TRUE), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_6.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_6 — stanreg_lm_6","title":"stanreg_lm_6 — stanreg_lm_6","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_6 — stanreg_lm_6","text":"","code":"stanreg_lm_6"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_6 — stanreg_lm_6","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_6 — stanreg_lm_6","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ wt * as.factor(gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_7.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lm_7 — stanreg_lm_7","title":"stanreg_lm_7 — stanreg_lm_7","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lm_7 — stanreg_lm_7","text":"","code":"stanreg_lm_7"},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_7.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lm_7 — stanreg_lm_7","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lm_7.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lm_7 — stanreg_lm_7","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_glm(mpg ~ as.factor(gear)/wt, data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_0.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lmerMod_0 — stanreg_lmerMod_0","title":"stanreg_lmerMod_0 — stanreg_lmerMod_0","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lmerMod_0 — stanreg_lmerMod_0","text":"","code":"stanreg_lmerMod_0"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lmerMod_0 — stanreg_lmerMod_0","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lmerMod_0 — stanreg_lmerMod_0","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_lmer(wt ~ 1 + (1 | gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lmerMod_1 — stanreg_lmerMod_1","title":"stanreg_lmerMod_1 — stanreg_lmerMod_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lmerMod_1 — stanreg_lmerMod_1","text":"","code":"stanreg_lmerMod_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lmerMod_1 — stanreg_lmerMod_1","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lmerMod_1 — stanreg_lmerMod_1","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_lmer(wt ~ cyl + (1 | gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_2.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lmerMod_2 — stanreg_lmerMod_2","title":"stanreg_lmerMod_2 — stanreg_lmerMod_2","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lmerMod_2 — stanreg_lmerMod_2","text":"","code":"stanreg_lmerMod_2"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lmerMod_2 — stanreg_lmerMod_2","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lmerMod_2 — stanreg_lmerMod_2","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_lmer(wt ~ drat + cyl + (1 | gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_3.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lmerMod_3 — stanreg_lmerMod_3","title":"stanreg_lmerMod_3 — stanreg_lmerMod_3","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lmerMod_3 — stanreg_lmerMod_3","text":"","code":"stanreg_lmerMod_3"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lmerMod_3 — stanreg_lmerMod_3","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lmerMod_3 — stanreg_lmerMod_3","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_lmer(wt ~ drat * cyl + (1 | gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_4.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lmerMod_4 — stanreg_lmerMod_4","title":"stanreg_lmerMod_4 — stanreg_lmerMod_4","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lmerMod_4 — stanreg_lmerMod_4","text":"","code":"stanreg_lmerMod_4"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lmerMod_4 — stanreg_lmerMod_4","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lmerMod_4 — stanreg_lmerMod_4","text":"","code":"if (FALSE) { # \\dontrun{ rstanarm::stan_lmer(wt ~ drat / cyl + (1 | gear), data = mtcars) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_5.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_lmerMod_5 — stanreg_lmerMod_5","title":"stanreg_lmerMod_5 — stanreg_lmerMod_5","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_lmerMod_5 — stanreg_lmerMod_5","text":"","code":"stanreg_lmerMod_5"},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_lmerMod_5 — stanreg_lmerMod_5","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_lmerMod_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_lmerMod_5 — stanreg_lmerMod_5","text":"","code":"if (FALSE) { # \\dontrun{ dat <- iris dat$Cat1 <- rep(c(\"X\", \"X\", \"Y\"), length.out = nrow(dat)) dat$Cat2 <- rep(c(\"A\", \"B\"), length.out = nrow(dat)) rstanarm::stan_lmer(Petal.Width ~ Cat1 + (1 + Cat1 | Species), data = dat) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_meanfield_lm_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_meanfield_lm_1 — stanreg_meanfield_lm_1","title":"stanreg_meanfield_lm_1 — stanreg_meanfield_lm_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_meanfield_lm_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_meanfield_lm_1 — stanreg_meanfield_lm_1","text":"","code":"stanreg_meanfield_lm_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_meanfield_lm_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_meanfield_lm_1 — stanreg_meanfield_lm_1","text":"object class stanreg (inherits glm, lm) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_meanfield_lm_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_meanfield_lm_1 — stanreg_meanfield_lm_1","text":"","code":"if (FALSE) { # \\dontrun{ update(stanreg_lm_1, algorithm = \"meanfield\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_0.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_merMod_0 — stanreg_merMod_0","title":"stanreg_merMod_0 — stanreg_merMod_0","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_merMod_0 — stanreg_merMod_0","text":"","code":"stanreg_merMod_0"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_0.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_merMod_0 — stanreg_merMod_0","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_merMod_0 — stanreg_merMod_0","text":"","code":"if (FALSE) { # \\dontrun{ stan_glmer(vs ~ 1 + (1 | gear), data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_1.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_merMod_1 — stanreg_merMod_1","title":"stanreg_merMod_1 — stanreg_merMod_1","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_merMod_1 — stanreg_merMod_1","text":"","code":"stanreg_merMod_1"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_merMod_1 — stanreg_merMod_1","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_merMod_1 — stanreg_merMod_1","text":"","code":"if (FALSE) { # \\dontrun{ stan_glmer(vs ~ cyl + (1 | gear), data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_2.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_merMod_2 — stanreg_merMod_2","title":"stanreg_merMod_2 — stanreg_merMod_2","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_merMod_2 — stanreg_merMod_2","text":"","code":"stanreg_merMod_2"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_merMod_2 — stanreg_merMod_2","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_merMod_2 — stanreg_merMod_2","text":"","code":"if (FALSE) { # \\dontrun{ stan_glmer(vs ~ drat + cyl + (1 | gear), data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_3.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_merMod_3 — stanreg_merMod_3","title":"stanreg_merMod_3 — stanreg_merMod_3","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_merMod_3 — stanreg_merMod_3","text":"","code":"stanreg_merMod_3"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_merMod_3 — stanreg_merMod_3","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_merMod_3 — stanreg_merMod_3","text":"","code":"if (FALSE) { # \\dontrun{ stan_glmer(vs ~ drat * cyl + (1 | gear), data = mtcars, family = \"binomial\") # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_4.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_merMod_4 — stanreg_merMod_4","title":"stanreg_merMod_4 — stanreg_merMod_4","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_merMod_4 — stanreg_merMod_4","text":"","code":"stanreg_merMod_4"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_merMod_4 — stanreg_merMod_4","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_merMod_4 — stanreg_merMod_4","text":"","code":"if (FALSE) { # \\dontrun{ stan_glmer(   vs ~ cyl + (1 | gear),   data = mtcars,   family = binomial(link = \"probit\") ) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_5.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_merMod_5 — stanreg_merMod_5","title":"stanreg_merMod_5 — stanreg_merMod_5","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_merMod_5 — stanreg_merMod_5","text":"","code":"stanreg_merMod_5"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_5.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_merMod_5 — stanreg_merMod_5","text":"object class stanreg (inherits glm, lm, lmerMod) length 27.","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stanreg_merMod_5 — stanreg_merMod_5","text":"","code":"if (FALSE) { # \\dontrun{ stan_glmer(   cbind(incidence, size - incidence) ~ size + period + (1 | herd),   data = lme4::cbpp, family = binomial, QR = TRUE,   chains = 2, cores = 1, seed = 12345, iter = 500, refresh = 0 ) # } }"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_6.html","id":null,"dir":"Reference","previous_headings":"","what":"stanreg_merMod_6 — stanreg_merMod_6","title":"stanreg_merMod_6 — stanreg_merMod_6","text":"Model class stanreg","code":""},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stanreg_merMod_6 — stanreg_merMod_6","text":"","code":"stanreg_merMod_6"},{"path":"https://easystats.github.io/circus/reference/stanreg_merMod_6.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stanreg_merMod_6 — stanreg_merMod_6","text":"object class stanreg (inherits glm, lm, lmerMod) length 28.","code":""},{"path":[]},{"path":"https://easystats.github.io/circus/reference/vgam_1.html","id":null,"dir":"Reference","previous_headings":"","what":"vgam_1 — vgam_1","title":"vgam_1 — vgam_1","text":"Model class vgam","code":""},{"path":"https://easystats.github.io/circus/reference/vgam_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vgam_1 — vgam_1","text":"","code":"vgam_1"},{"path":"https://easystats.github.io/circus/reference/vgam_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"vgam_1 — vgam_1","text":"object class vgam length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/vgam_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vgam_1 — vgam_1","text":"","code":"if (FALSE) { data(\"hunua\") vgam(agaaus ~ vitluc + s(altitude, df = 2), binomialff, data = hunua) }"},{"path":"https://easystats.github.io/circus/reference/vgam_2.html","id":null,"dir":"Reference","previous_headings":"","what":"vgam_2 — vgam_2","title":"vgam_2 — vgam_2","text":"Model class vgam","code":""},{"path":"https://easystats.github.io/circus/reference/vgam_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vgam_2 — vgam_2","text":"","code":"vgam_2"},{"path":"https://easystats.github.io/circus/reference/vgam_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"vgam_2 — vgam_2","text":"object class vgam length 1.","code":""},{"path":"https://easystats.github.io/circus/reference/vgam_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vgam_2 — vgam_2","text":"","code":"if (FALSE) { data(\"hunua\") vgam(   cbind(agaaus, kniexc) ~ vitluc + s(altitude, df = c(2, 3)),   binomialff(multiple.responses = TRUE),   data = hunua ) }"}]
